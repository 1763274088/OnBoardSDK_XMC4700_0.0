<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\OnBoardSDK_XMC4700.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\OnBoardSDK_XMC4700.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060300: Last Updated: Tue Apr 10 09:51:58 2018
<BR><P>
<H3>Maximum Stack Usage =       1376 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
USIC1_5_IRQHandler &rArr; DJI::onboardSDK::CoreAPI::byteHandler(unsigned char) &rArr; DJI::onboardSDK::CoreAPI::streamHandler(DJI::onboardSDK::SDKFilter*, unsigned char) &rArr; DJI::onboardSDK::CoreAPI::checkStream(DJI::onboardSDK::SDKFilter*) &rArr; DJI::onboardSDK::CoreAPI::verifyHead(DJI::onboardSDK::SDKFilter*) &rArr; DJI::onboardSDK::CoreAPI::callApp(DJI::onboardSDK::SDKFilter*) &rArr; DJI::onboardSDK::CoreAPI::appHandler(DJI::onboardSDK::Header*) &rArr; DJI::onboardSDK::CoreAPI::recvReqData(DJI::onboardSDK::Header*) &rArr; DJI::onboardSDK::CoreAPI::broadcast(DJI::onboardSDK::Header*) &rArr; DJI::onboardSDK::CoreAPI::getFlightStatus() const &rArr; DJI::onboardSDK::CoreAPI::getBroadcastData() const &rArr; __aeabi_memcpy4
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[e]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[e]">BusFault_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[e]">BusFault_Handler</a> from startup_xmc4700.o(.text) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[58]">CAN0_0_IRQHandler</a> from startup_xmc4700.o(.text) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[59]">CAN0_1_IRQHandler</a> from startup_xmc4700.o(.text) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[5a]">CAN0_2_IRQHandler</a> from startup_xmc4700.o(.text) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[5b]">CAN0_3_IRQHandler</a> from startup_xmc4700.o(.text) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[5c]">CAN0_4_IRQHandler</a> from startup_xmc4700.o(.text) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[5d]">CAN0_5_IRQHandler</a> from startup_xmc4700.o(.text) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[5e]">CAN0_6_IRQHandler</a> from startup_xmc4700.o(.text) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[5f]">CAN0_7_IRQHandler</a> from startup_xmc4700.o(.text) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[3c]">CCU40_0_IRQHandler</a> from timer.o(i.CCU40_0_IRQHandler) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[3d]">CCU40_1_IRQHandler</a> from timer.o(i.CCU40_1_IRQHandler) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[3e]">CCU40_2_IRQHandler</a> from startup_xmc4700.o(.text) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[3f]">CCU40_3_IRQHandler</a> from startup_xmc4700.o(.text) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[40]">CCU41_0_IRQHandler</a> from startup_xmc4700.o(.text) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[41]">CCU41_1_IRQHandler</a> from startup_xmc4700.o(.text) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[42]">CCU41_2_IRQHandler</a> from startup_xmc4700.o(.text) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[43]">CCU41_3_IRQHandler</a> from startup_xmc4700.o(.text) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[44]">CCU42_0_IRQHandler</a> from startup_xmc4700.o(.text) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[45]">CCU42_1_IRQHandler</a> from startup_xmc4700.o(.text) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[46]">CCU42_2_IRQHandler</a> from startup_xmc4700.o(.text) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[47]">CCU42_3_IRQHandler</a> from startup_xmc4700.o(.text) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[48]">CCU43_0_IRQHandler</a> from startup_xmc4700.o(.text) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[49]">CCU43_1_IRQHandler</a> from startup_xmc4700.o(.text) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[4a]">CCU43_2_IRQHandler</a> from startup_xmc4700.o(.text) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[4b]">CCU43_3_IRQHandler</a> from startup_xmc4700.o(.text) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[4c]">CCU80_0_IRQHandler</a> from startup_xmc4700.o(.text) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[4d]">CCU80_1_IRQHandler</a> from startup_xmc4700.o(.text) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[4e]">CCU80_2_IRQHandler</a> from startup_xmc4700.o(.text) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[4f]">CCU80_3_IRQHandler</a> from startup_xmc4700.o(.text) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[50]">CCU81_0_IRQHandler</a> from startup_xmc4700.o(.text) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[51]">CCU81_1_IRQHandler</a> from startup_xmc4700.o(.text) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[52]">CCU81_2_IRQHandler</a> from startup_xmc4700.o(.text) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[53]">CCU81_3_IRQHandler</a> from startup_xmc4700.o(.text) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[3a]">DAC0_0_IRQHandler</a> from startup_xmc4700.o(.text) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[3b]">DAC0_1_IRQHandler</a> from startup_xmc4700.o(.text) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[32]">DSD0_0_IRQHandler</a> from startup_xmc4700.o(.text) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[33]">DSD0_1_IRQHandler</a> from startup_xmc4700.o(.text) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[34]">DSD0_2_IRQHandler</a> from startup_xmc4700.o(.text) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[35]">DSD0_3_IRQHandler</a> from startup_xmc4700.o(.text) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[36]">DSD0_4_IRQHandler</a> from startup_xmc4700.o(.text) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[37]">DSD0_5_IRQHandler</a> from startup_xmc4700.o(.text) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[38]">DSD0_6_IRQHandler</a> from startup_xmc4700.o(.text) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[39]">DSD0_7_IRQHandler</a> from startup_xmc4700.o(.text) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[11]">DebugMon_Handler</a> from startup_xmc4700.o(.text) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[15]">ERU0_0_IRQHandler</a> from startup_xmc4700.o(.text) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[16]">ERU0_1_IRQHandler</a> from startup_xmc4700.o(.text) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[17]">ERU0_2_IRQHandler</a> from startup_xmc4700.o(.text) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[18]">ERU0_3_IRQHandler</a> from startup_xmc4700.o(.text) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[19]">ERU1_0_IRQHandler</a> from startup_xmc4700.o(.text) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[1a]">ERU1_1_IRQHandler</a> from startup_xmc4700.o(.text) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[1b]">ERU1_2_IRQHandler</a> from startup_xmc4700.o(.text) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[1c]">ERU1_3_IRQHandler</a> from startup_xmc4700.o(.text) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[77]">ETH0_0_IRQHandler</a> from startup_xmc4700.o(.text) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[73]">FCE0_0_IRQHandler</a> from startup_xmc4700.o(.text) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[74]">GPDMA0_0_IRQHandler</a> from startup_xmc4700.o(.text) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[78]">GPDMA1_0_IRQHandler</a> from startup_xmc4700.o(.text) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[c]">HardFault_Handler</a> from startup_xmc4700.o(.text) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[72]">LEDTS0_0_IRQHandler</a> from startup_xmc4700.o(.text) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[d]">MemManage_Handler</a> from startup_xmc4700.o(.text) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[b]">NMI_Handler</a> from startup_xmc4700.o(.text) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[1d]">PMU0_0_IRQHandler</a> from startup_xmc4700.o(.text) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[54]">POSIF0_0_IRQHandler</a> from startup_xmc4700.o(.text) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[55]">POSIF0_1_IRQHandler</a> from startup_xmc4700.o(.text) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[56]">POSIF1_0_IRQHandler</a> from startup_xmc4700.o(.text) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[57]">POSIF1_1_IRQHandler</a> from startup_xmc4700.o(.text) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[12]">PendSV_Handler</a> from startup_xmc4700.o(.text) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[a]">Reset_Handler</a> from startup_xmc4700.o(.text) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[14]">SCU_0_IRQHandler</a> from startup_xmc4700.o(.text) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[75]">SDMMC0_0_IRQHandler</a> from startup_xmc4700.o(.text) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[10]">SVC_Handler</a> from startup_xmc4700.o(.text) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[13]">SysTick_Handler</a> from timer.o(i.SysTick_Handler) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[7a]">SystemInit</a> from system_xmc4700.o(i.SystemInit) referenced from startup_xmc4700.o(.text)
 <LI><a href="#[76]">USB0_0_IRQHandler</a> from startup_xmc4700.o(.text) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[60]">USIC0_0_IRQHandler</a> from startup_xmc4700.o(.text) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[61]">USIC0_1_IRQHandler</a> from startup_xmc4700.o(.text) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[62]">USIC0_2_IRQHandler</a> from startup_xmc4700.o(.text) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[63]">USIC0_3_IRQHandler</a> from startup_xmc4700.o(.text) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[64]">USIC0_4_IRQHandler</a> from startup_xmc4700.o(.text) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[65]">USIC0_5_IRQHandler</a> from receive.o(i.USIC0_5_IRQHandler) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[66]">USIC1_0_IRQHandler</a> from startup_xmc4700.o(.text) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[67]">USIC1_1_IRQHandler</a> from startup_xmc4700.o(.text) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[68]">USIC1_2_IRQHandler</a> from startup_xmc4700.o(.text) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[69]">USIC1_3_IRQHandler</a> from startup_xmc4700.o(.text) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[6a]">USIC1_4_IRQHandler</a> from startup_xmc4700.o(.text) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[6b]">USIC1_5_IRQHandler</a> from bspusart.o(i.USIC1_5_IRQHandler) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[6c]">USIC2_0_IRQHandler</a> from startup_xmc4700.o(.text) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[6d]">USIC2_1_IRQHandler</a> from startup_xmc4700.o(.text) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[6e]">USIC2_2_IRQHandler</a> from startup_xmc4700.o(.text) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[6f]">USIC2_3_IRQHandler</a> from startup_xmc4700.o(.text) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[70]">USIC2_4_IRQHandler</a> from startup_xmc4700.o(.text) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[71]">USIC2_5_IRQHandler</a> from startup_xmc4700.o(.text) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[f]">UsageFault_Handler</a> from startup_xmc4700.o(.text) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[1e]">VADC0_C0_0_IRQHandler</a> from startup_xmc4700.o(.text) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[1f]">VADC0_C0_1_IRQHandler</a> from startup_xmc4700.o(.text) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[20]">VADC0_C0_2_IRQHandler</a> from startup_xmc4700.o(.text) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[21]">VADC0_C0_3_IRQHandler</a> from startup_xmc4700.o(.text) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[22]">VADC0_G0_0_IRQHandler</a> from startup_xmc4700.o(.text) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[23]">VADC0_G0_1_IRQHandler</a> from startup_xmc4700.o(.text) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[24]">VADC0_G0_2_IRQHandler</a> from startup_xmc4700.o(.text) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[25]">VADC0_G0_3_IRQHandler</a> from startup_xmc4700.o(.text) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[26]">VADC0_G1_0_IRQHandler</a> from startup_xmc4700.o(.text) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[27]">VADC0_G1_1_IRQHandler</a> from startup_xmc4700.o(.text) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[28]">VADC0_G1_2_IRQHandler</a> from startup_xmc4700.o(.text) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[29]">VADC0_G1_3_IRQHandler</a> from startup_xmc4700.o(.text) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[2a]">VADC0_G2_0_IRQHandler</a> from startup_xmc4700.o(.text) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[2b]">VADC0_G2_1_IRQHandler</a> from startup_xmc4700.o(.text) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[2c]">VADC0_G2_2_IRQHandler</a> from startup_xmc4700.o(.text) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[2d]">VADC0_G2_3_IRQHandler</a> from startup_xmc4700.o(.text) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[2e]">VADC0_G3_0_IRQHandler</a> from startup_xmc4700.o(.text) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[2f]">VADC0_G3_1_IRQHandler</a> from startup_xmc4700.o(.text) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[30]">VADC0_G3_2_IRQHandler</a> from startup_xmc4700.o(.text) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[31]">VADC0_G3_3_IRQHandler</a> from startup_xmc4700.o(.text) referenced from startup_xmc4700.o(RESET)
 <LI><a href="#[8f]">myRecvCallback(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*)</a> from localnavigation.o(i._Z14myRecvCallbackPN3DJI10onboardSDK7CoreAPIEPNS0_6HeaderEPv) referenced from main.o(i.main)
 <LI><a href="#[81]">aes256_decrypt_ecb(tagAES256Context*, unsigned char*)</a> from dji_codec.o(i._Z18aes256_decrypt_ecbP16tagAES256ContextPh) referenced from dji_codec.o(i._Z10encodeDataPN3DJI10onboardSDK9SDKFilterEPNS0_6HeaderEPFvP16tagAES256ContextPhE)
 <LI><a href="#[81]">aes256_decrypt_ecb(tagAES256Context*, unsigned char*)</a> from dji_codec.o(i._Z18aes256_decrypt_ecbP16tagAES256ContextPh) referenced from dji_codec.o(i._ZN3DJI10onboardSDK7CoreAPI7callAppEPNS0_9SDKFilterE)
 <LI><a href="#[88]">aes256_encrypt_ecb(tagAES256Context*, unsigned char*)</a> from dji_codec.o(i._Z18aes256_encrypt_ecbP16tagAES256ContextPh) referenced from dji_codec.o(i._ZN3DJI10onboardSDK7CoreAPI7encryptEPhPKhthhht)
 <LI><a href="#[8c]">__default_new_handler()</a> from arm_newhandler_noexceptions.o(.text) referenced from new.o(i._Znwj)
 <LI><a href="#[80]">[local to arm_exceptions_c]::__default_terminate_handler()</a> from arm_exceptions_globs.o(.text) referenced from arm_exceptions_globs.o(.text)
 <LI><a href="#[9e]">DJI::onboardSDK::HardDriver::displayLog(const char*)</a> from dji_harddriver.o(i._ZN3DJI10onboardSDK10HardDriver10displayLogEPKc) referenced from driver.o(.constdata__ZTV8XMC_4700)
 <LI><a href="#[9e]">DJI::onboardSDK::HardDriver::displayLog(const char*)</a> from dji_harddriver.o(i._ZN3DJI10onboardSDK10HardDriver10displayLogEPKc) referenced from dji_harddriver.o(.constdata__ZTVN3DJI10onboardSDK10HardDriverE)
 <LI><a href="#[9c]">DJI::onboardSDK::HardDriver::freeNonBlockCBAck()</a> from driver.o(i._ZN3DJI10onboardSDK10HardDriver17freeNonBlockCBAckEv) referenced from driver.o(.constdata__ZTV8XMC_4700)
 <LI><a href="#[9c]">DJI::onboardSDK::HardDriver::freeNonBlockCBAck()</a> from driver.o(i._ZN3DJI10onboardSDK10HardDriver17freeNonBlockCBAckEv) referenced from dji_harddriver.o(.constdata__ZTVN3DJI10onboardSDK10HardDriverE)
 <LI><a href="#[9b]">DJI::onboardSDK::HardDriver::lockNonBlockCBAck()</a> from driver.o(i._ZN3DJI10onboardSDK10HardDriver17lockNonBlockCBAckEv) referenced from driver.o(.constdata__ZTV8XMC_4700)
 <LI><a href="#[9b]">DJI::onboardSDK::HardDriver::lockNonBlockCBAck()</a> from driver.o(i._ZN3DJI10onboardSDK10HardDriver17lockNonBlockCBAckEv) referenced from dji_harddriver.o(.constdata__ZTVN3DJI10onboardSDK10HardDriverE)
 <LI><a href="#[9a]">DJI::onboardSDK::HardDriver::freeProtocolHeader()</a> from driver.o(i._ZN3DJI10onboardSDK10HardDriver18freeProtocolHeaderEv) referenced from driver.o(.constdata__ZTV8XMC_4700)
 <LI><a href="#[9a]">DJI::onboardSDK::HardDriver::freeProtocolHeader()</a> from driver.o(i._ZN3DJI10onboardSDK10HardDriver18freeProtocolHeaderEv) referenced from dji_harddriver.o(.constdata__ZTVN3DJI10onboardSDK10HardDriverE)
 <LI><a href="#[99]">DJI::onboardSDK::HardDriver::lockProtocolHeader()</a> from driver.o(i._ZN3DJI10onboardSDK10HardDriver18lockProtocolHeaderEv) referenced from driver.o(.constdata__ZTV8XMC_4700)
 <LI><a href="#[99]">DJI::onboardSDK::HardDriver::lockProtocolHeader()</a> from driver.o(i._ZN3DJI10onboardSDK10HardDriver18lockProtocolHeaderEv) referenced from dji_harddriver.o(.constdata__ZTVN3DJI10onboardSDK10HardDriverE)
 <LI><a href="#[9d]">DJI::onboardSDK::HardDriver::notifyNonBlockCBAckRecv()</a> from driver.o(i._ZN3DJI10onboardSDK10HardDriver23notifyNonBlockCBAckRecvEv) referenced from driver.o(.constdata__ZTV8XMC_4700)
 <LI><a href="#[9d]">DJI::onboardSDK::HardDriver::notifyNonBlockCBAckRecv()</a> from driver.o(i._ZN3DJI10onboardSDK10HardDriver23notifyNonBlockCBAckRecvEv) referenced from dji_harddriver.o(.constdata__ZTVN3DJI10onboardSDK10HardDriverE)
 <LI><a href="#[8a]">DJI::onboardSDK::missionCallback(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*)</a> from dji_mission.o(i._ZN3DJI10onboardSDK15missionCallbackEPNS0_7CoreAPIEPNS0_6HeaderEPv) referenced from dji_hotpoint.o(i._ZN3DJI10onboardSDK8HotPoint4stopEPFvPNS0_7CoreAPIEPNS0_6HeaderEPvES6_)
 <LI><a href="#[83]">DJI::onboardSDK::Flight::armCallback(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*)</a> from dji_flight.o(i._ZN3DJI10onboardSDK6Flight11armCallbackEPNS0_7CoreAPIEPNS0_6HeaderEPv) referenced from dji_flight.o(i._ZN3DJI10onboardSDK6Flight6setArmEbPFvPNS0_7CoreAPIEPNS0_6HeaderEPvES6_)
 <LI><a href="#[82]">DJI::onboardSDK::Flight::taskCallback(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*)</a> from dji_flight.o(i._ZN3DJI10onboardSDK6Flight12taskCallbackEPNS0_7CoreAPIEPNS0_6HeaderEPv) referenced from dji_flight.o(i._ZN3DJI10onboardSDK6Flight4taskENS1_4TASKEPFvPNS0_7CoreAPIEPNS0_6HeaderEPvES7_)
 <LI><a href="#[89]">DJI::onboardSDK::CoreAPI::activateCallback(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*)</a> from dji_api.o(i._ZN3DJI10onboardSDK7CoreAPI16activateCallbackEPS1_PNS0_6HeaderEPv) referenced from dji_api.o(i._ZN3DJI10onboardSDK7CoreAPI8activateEPNS0_12ActivateDataEPFvPS1_PNS0_6HeaderEPvES7_)
 <LI><a href="#[84]">DJI::onboardSDK::CoreAPI::setControlCallback(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*)</a> from dji_api.o(i._ZN3DJI10onboardSDK7CoreAPI18setControlCallbackEPS1_PNS0_6HeaderEPv) referenced from dji_api.o(i._ZN3DJI10onboardSDK7CoreAPI10setControlEbPFvPS1_PNS0_6HeaderEPvES5_)
 <LI><a href="#[84]">DJI::onboardSDK::CoreAPI::setControlCallback(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*)</a> from dji_api.o(i._ZN3DJI10onboardSDK7CoreAPI18setControlCallbackEPS1_PNS0_6HeaderEPv) referenced 2 times from dji_api.o(i._ZN3DJI10onboardSDK7CoreAPI18setControlCallbackEPS1_PNS0_6HeaderEPv)
 <LI><a href="#[85]">DJI::onboardSDK::CoreAPI::sendToMobileCallback(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*)</a> from dji_api.o(i._ZN3DJI10onboardSDK7CoreAPI20sendToMobileCallbackEPS1_PNS0_6HeaderEPv) referenced from dji_api.o(i._ZN3DJI10onboardSDK7CoreAPI12sendToMobileEPhhPFvPS1_PNS0_6HeaderEPvES6_)
 <LI><a href="#[87]">DJI::onboardSDK::CoreAPI::setFrequencyCallback(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*)</a> from dji_api.o(i._ZN3DJI10onboardSDK7CoreAPI20setFrequencyCallbackEPS1_PNS0_6HeaderEPv) referenced from dji_api.o(i._ZN3DJI10onboardSDK7CoreAPI16setBroadcastFreqEPhPFvPS1_PNS0_6HeaderEPvES6_)
 <LI><a href="#[86]">DJI::onboardSDK::CoreAPI::getDroneVersionCallback(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*)</a> from dji_api.o(i._ZN3DJI10onboardSDK7CoreAPI23getDroneVersionCallbackEPS1_PNS0_6HeaderEPv) referenced from dji_api.o(i._ZN3DJI10onboardSDK7CoreAPI15getDroneVersionEPFvPS1_PNS0_6HeaderEPvES5_)
 <LI><a href="#[8b]">DJI::onboardSDK::HotPoint::startCallback(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*)</a> from dji_hotpoint.o(i._ZN3DJI10onboardSDK8HotPoint13startCallbackEPNS0_7CoreAPIEPNS0_6HeaderEPv) referenced from dji_hotpoint.o(i._ZN3DJI10onboardSDK8HotPoint5startEPFvPNS0_7CoreAPIEPNS0_6HeaderEPvES6_)
 <LI><a href="#[93]">XMC_4700::freeMemory()</a> from driver.o(i._ZN8XMC_470010freeMemoryEv) referenced from driver.o(.constdata__ZTV8XMC_4700)
 <LI><a href="#[92]">XMC_4700::lockMemory()</a> from driver.o(i._ZN8XMC_470010lockMemoryEv) referenced from driver.o(.constdata__ZTV8XMC_4700)
 <LI><a href="#[90]">XMC_4700::getTimeStamp()</a> from driver.o(i._ZN8XMC_470012getTimeStampEv) referenced from driver.o(.constdata__ZTV8XMC_4700)
 <LI><a href="#[91]">XMC_4700::send(const unsigned char*, unsigned)</a> from driver.o(i._ZN8XMC_47004sendEPKhj) referenced from driver.o(.constdata__ZTV8XMC_4700)
 <LI><a href="#[98]">XMC_4700::notify()</a> from driver.o(i._ZN8XMC_47006notifyEv) referenced from driver.o(.constdata__ZTV8XMC_4700)
 <LI><a href="#[97]">XMC_4700::freeACK()</a> from driver.o(i._ZN8XMC_47007freeACKEv) referenced from driver.o(.constdata__ZTV8XMC_4700)
 <LI><a href="#[95]">XMC_4700::freeMSG()</a> from driver.o(i._ZN8XMC_47007freeMSGEv) referenced from driver.o(.constdata__ZTV8XMC_4700)
 <LI><a href="#[96]">XMC_4700::lockACK()</a> from driver.o(i._ZN8XMC_47007lockACKEv) referenced from driver.o(.constdata__ZTV8XMC_4700)
 <LI><a href="#[94]">XMC_4700::lockMSG()</a> from driver.o(i._ZN8XMC_47007lockMSGEv) referenced from driver.o(.constdata__ZTV8XMC_4700)
 <LI><a href="#[9f]">__cxa_pure_virtual</a> from pure_virt.o(i.__cxa_pure_virtual) referenced 12 times from dji_harddriver.o(.constdata__ZTVN3DJI10onboardSDK10HardDriverE)
 <LI><a href="#[7b]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_xmc4700.o(.text)
 <LI><a href="#[a2]">__sti___11_Receive_cpp_88bc3a46</a> from receive.o(i.__sti___11_Receive_cpp_88bc3a46) referenced from receive.o(.init_array)
 <LI><a href="#[a1]">__sti___12_HotPoint_cpp_hotpoint</a> from hotpoint.o(i.__sti___12_HotPoint_cpp_hotpoint) referenced from hotpoint.o(.init_array)
 <LI><a href="#[a0]">__sti___8_main_cpp_driver</a> from main.o(i.__sti___8_main_cpp_driver) referenced from main.o(.init_array)
 <LI><a href="#[7d]">_sbackspace</a> from _sgetc.o(.text) referenced from __0sscanf.o(.text)
 <LI><a href="#[7e]">_scanf_char_input</a> from scanf_char.o(.text) referenced from scanf_char.o(.text)
 <LI><a href="#[7c]">_sgetc</a> from _sgetc.o(.text) referenced from __0sscanf.o(.text)
 <LI><a href="#[8e]">_sputc</a> from printfa.o(i._sputc) referenced from printfa.o(i.__0sprintf)
 <LI><a href="#[8d]">fputc</a> from cppforxmc4700.o(i.fputc) referenced from printfa.o(i.__0printf)
 <LI><a href="#[7f]">isspace</a> from isspace_c.o(.text) referenced from scanf_char.o(.text)
 <LI><a href="#[79]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[7b]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(.text)
</UL>
<P><STRONG><a name="[17d]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[a4]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[c3]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[17e]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[a6]"></a>_main_cpp_init$empty</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8a.o(.ARM.Collect$$$$00000009))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = _main_cpp_init$empty &rArr; __cpp_initialize__aeabi_
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cpp_initialize__aeabi_
</UL>

<P><STRONG><a name="[17f]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[180]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[181]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[182]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[a]"></a>Reset_Handler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, startup_xmc4700.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>BusFault_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4700.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>CAN0_0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4700.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>CAN0_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4700.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>CAN0_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4700.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>CAN0_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4700.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>CAN0_4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4700.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[5d]"></a>CAN0_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4700.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>CAN0_6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4700.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[5f]"></a>CAN0_7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4700.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>CCU40_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4700.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>CCU40_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4700.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>CCU41_0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4700.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>CCU41_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4700.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>CCU41_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4700.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>CCU41_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4700.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>CCU42_0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4700.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>CCU42_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4700.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>CCU42_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4700.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>CCU42_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4700.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>CCU43_0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4700.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>CCU43_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4700.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>CCU43_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4700.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>CCU43_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4700.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>CCU80_0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4700.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>CCU80_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4700.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>CCU80_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4700.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>CCU80_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4700.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>CCU81_0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4700.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>CCU81_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4700.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>CCU81_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4700.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>CCU81_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4700.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>DAC0_0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4700.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>DAC0_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4700.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>DSD0_0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4700.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>DSD0_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4700.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>DSD0_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4700.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>DSD0_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4700.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>DSD0_4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4700.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>DSD0_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4700.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>DSD0_6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4700.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>DSD0_7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4700.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>DebugMon_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4700.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>ERU0_0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4700.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>ERU0_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4700.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>ERU0_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4700.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>ERU0_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4700.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>ERU1_0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4700.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>ERU1_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4700.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>ERU1_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4700.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>ERU1_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4700.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[77]"></a>ETH0_0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4700.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[73]"></a>FCE0_0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4700.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[74]"></a>GPDMA0_0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4700.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[78]"></a>GPDMA1_0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4700.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>HardFault_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4700.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[72]"></a>LEDTS0_0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4700.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>MemManage_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4700.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>NMI_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4700.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>PMU0_0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4700.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>POSIF0_0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4700.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>POSIF0_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4700.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>POSIF1_0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4700.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>POSIF1_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4700.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>PendSV_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4700.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>SCU_0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4700.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[75]"></a>SDMMC0_0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4700.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>SVC_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4700.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[76]"></a>USB0_0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4700.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[60]"></a>USIC0_0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4700.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[61]"></a>USIC0_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4700.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[62]"></a>USIC0_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4700.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[63]"></a>USIC0_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4700.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[64]"></a>USIC0_4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4700.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[66]"></a>USIC1_0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4700.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[67]"></a>USIC1_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4700.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[68]"></a>USIC1_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4700.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[69]"></a>USIC1_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4700.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[6a]"></a>USIC1_4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4700.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[6c]"></a>USIC2_0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4700.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[6d]"></a>USIC2_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4700.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[6e]"></a>USIC2_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4700.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[6f]"></a>USIC2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4700.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[70]"></a>USIC2_4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4700.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[71]"></a>USIC2_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4700.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>UsageFault_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4700.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>VADC0_C0_0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4700.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>VADC0_C0_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4700.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>VADC0_C0_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4700.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>VADC0_C0_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4700.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>VADC0_G0_0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4700.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>VADC0_G0_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4700.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>VADC0_G0_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4700.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>VADC0_G0_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4700.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>VADC0_G1_0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4700.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>VADC0_G1_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4700.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>VADC0_G1_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4700.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>VADC0_G1_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4700.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>VADC0_G2_0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4700.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>VADC0_G2_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4700.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>VADC0_G2_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4700.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>VADC0_G2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4700.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>VADC0_G3_0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4700.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>VADC0_G3_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4700.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>VADC0_G3_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4700.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>VADC0_G3_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc4700.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[124]"></a>arm_cos_f32</STRONG> (Thumb, 108 bytes, Stack size 0 bytes, arm_cos_f32.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_convert_ned_rad(float&, float&, float, float, float, float)
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateCurveFollowing()
</UL>

<P><STRONG><a name="[12f]"></a>arm_sin_f32</STRONG> (Thumb, 118 bytes, Stack size 0 bytes, arm_sin_f32.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateCurveFollowing()
</UL>

<P><STRONG><a name="[183]"></a>___aeabi_memcpy8$move</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text), UNUSED)

<P><STRONG><a name="[c5]"></a>__aeabi_memcpy</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, memmovea.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::getBroadcastData() const
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::activate(DJI::onboardSDK::ActivateData*, void(*)(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*), void*)
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;myRecvCallback(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*)
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCU40_0_IRQHandler
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VRC_TakeControl()
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateCurveFollowing()
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::encrypt(unsigned char*, const unsigned char*, unsigned short, unsigned char, unsigned char, unsigned char, unsigned short)
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;passData(unsigned short, unsigned short&, void*, unsigned char*, unsigned, unsigned&)
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::send(unsigned char, bool, DJI::onboardSDK::CMD_SET, unsigned char, void*, unsigned, int, int, void(*)(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*), void*)
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::parseDroneVersionInfo(unsigned char*)
</UL>

<P><STRONG><a name="[e4]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::getBroadcastData() const
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tryHotpoint(double, float, float)
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TerminalCommand::terminalCommandHandler(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Flight*)
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;myRecvCallback(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*)
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::VirtualRC::sendData(DJI::onboardSDK::VirtualRCData)
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mavlink_frame_char_buffer(__mavlink_message*, __mavlink_status*, unsigned char, __mavlink_message*, __mavlink_status*)
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::getFlightStatus() const
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::Flight::setMovementControl(unsigned char, float, float, float, float)
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateCurveFollowing()
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::Flight::taskCallback(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*)
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::Flight::armCallback(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*)
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::broadcast(DJI::onboardSDK::Header*)
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::setFrequencyCallback(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*)
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::sendToMobileCallback(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*)
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::setControlCallback(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*)
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::activateCallback(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*)
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::allocateACK(DJI::onboardSDK::Header*)
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::HotPoint::initData()
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::HotPoint::startCallback(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*)
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::missionCallback(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*)
</UL>

<P><STRONG><a name="[134]"></a>__aeabi_memmove</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memmove
</UL>
<BR>[Called By]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdk_stream_update_reuse_part_lambda(DJI::onboardSDK::SDKFilter*)
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdk_stream_shift_data_lambda(DJI::onboardSDK::SDKFilter*)
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdk_stream_prepare_lambda(DJI::onboardSDK::SDKFilter*)
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::allocMemory(unsigned short)
</UL>

<P><STRONG><a name="[184]"></a>__aeabi_memmove4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text), UNUSED)

<P><STRONG><a name="[185]"></a>__aeabi_memmove8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text), UNUSED)

<P><STRONG><a name="[a8]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[186]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[187]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[a7]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::storeData(DJI::onboardSDK::SDKFilter*, unsigned char)
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdk_stream_prepare_lambda(DJI::onboardSDK::SDKFilter*)
</UL>

<P><STRONG><a name="[13a]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TerminalCommand::terminalCommandHandler(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Flight*)
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::recvReqData(DJI::onboardSDK::Header*)
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::init(DJI::onboardSDK::HardDriver*, DJI::onboardSDK::CallBackHandler, bool)
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::parseDroneVersionInfo(unsigned char*)
</UL>

<P><STRONG><a name="[188]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[a9]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[160]"></a>strcmp</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, strcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::setBroadcastFreq(unsigned char*, void(*)(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*), void*)
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::broadcast(DJI::onboardSDK::Header*)
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::parseDroneVersionInfo(unsigned char*)
</UL>

<P><STRONG><a name="[aa]"></a>__0sscanf</STRONG> (Thumb, 48 bytes, Stack size 72 bytes, __0sscanf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_int
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf_char
</UL>
<BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transformTwoByte(const char*, unsigned char*)
</UL>

<P><STRONG><a name="[ac]"></a>_scanf_int</STRONG> (Thumb, 332 bytes, Stack size 56 bytes, _scanf_int.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _scanf_int
</UL>
<BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_chval
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>

<P><STRONG><a name="[a3]"></a>__cpp_initialize__aeabi_</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, cpp_init.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __cpp_initialize__aeabi_
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_cpp_init$empty
</UL>

<P><STRONG><a name="[ae]"></a>__aeabi_dadd</STRONG> (Thumb, 322 bytes, Stack size 48 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
</UL>

<P><STRONG><a name="[b3]"></a>__aeabi_dsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[b4]"></a>__aeabi_drsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[b5]"></a>__aeabi_dmul</STRONG> (Thumb, 228 bytes, Stack size 48 bytes, dmul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[b6]"></a>__aeabi_ui2d</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, dfltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_ui2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TerminalCommand::terminalCommandHandler(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Flight*)
</UL>

<P><STRONG><a name="[e7]"></a>__aeabi_f2d</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, f2d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tryHotpoint(double, float, float)
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TerminalCommand::terminalCommandHandler(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Flight*)
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::HotPoint::initData()
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::HotPoint::startCallback(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*)
</UL>

<P><STRONG><a name="[178]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, cdrcmple.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[b7]"></a>__aeabi_d2f</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, d2f.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_convert_ned(DJI::onboardSDK::PositionData, DJI::onboardSDK::PositionData)
</UL>

<P><STRONG><a name="[8c]"></a>__default_new_handler()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, arm_newhandler_noexceptions.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = __default_new_handler() &rArr; std::terminate() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::terminate()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> new.o(i._Znwj)
</UL>
<P><STRONG><a name="[189]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[17b]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[ba]"></a>__aeabi_uldivmod</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, uldiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[af]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[18a]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[b0]"></a>__aeabi_lasr</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[18b]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[ad]"></a>_chval</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, _chval.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_int
</UL>

<P><STRONG><a name="[ab]"></a>__vfscanf_char</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, scanf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = __vfscanf_char &rArr; __vfscanf &rArr; _scanf_int
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sscanf
</UL>

<P><STRONG><a name="[7c]"></a>_sgetc</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, _sgetc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> __0sscanf.o(.text)
</UL>
<P><STRONG><a name="[7d]"></a>_sbackspace</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, _sgetc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> __0sscanf.o(.text)
</UL>
<P><STRONG><a name="[18c]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[171]"></a>__rt_new_handler_addr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cpp_memory.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
</UL>

<P><STRONG><a name="[c0]"></a>__rt_eh_globals_addr</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, cpp_memory.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_get_globals
</UL>

<P><STRONG><a name="[175]"></a>__rt_SIGPVFN</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, cpp_signal.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_pure_virtual
</UL>

<P><STRONG><a name="[b8]"></a>_float_round</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>

<P><STRONG><a name="[18d]"></a>_float_epilogue</STRONG> (Thumb, 92 bytes, Stack size 4 bytes, fepilogue.o(.text), UNUSED)

<P><STRONG><a name="[b2]"></a>_double_round</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>

<P><STRONG><a name="[b1]"></a>_double_epilogue</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[bd]"></a>__aeabi_ddiv</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, ddiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[be]"></a>__aeabi_d2ulz</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, dfixul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[b9]"></a>std::terminate()</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, arm_exceptions_terminate.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = std::terminate() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_get_globals
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_new_handler()
</UL>

<P><STRONG><a name="[bf]"></a>__cxa_get_globals</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, arm_exceptions_globs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_exceptions_buffer_init
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_eh_globals_addr
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::terminate()
</UL>

<P><STRONG><a name="[a5]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[18e]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[bb]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[18f]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[7f]"></a>isspace</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, isspace_c.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ctype_lookup
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scanf_char.o(.text)
</UL>
<P><STRONG><a name="[bc]"></a>__vfscanf</STRONG> (Thumb, 808 bytes, Stack size 88 bytes, _scanf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = __vfscanf &rArr; _scanf_int
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_int
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf_char
</UL>

<P><STRONG><a name="[c2]"></a>__ARM_exceptions_buffer_init</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, arm_exceptions_mem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = __ARM_exceptions_buffer_init &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_get_globals
</UL>

<P><STRONG><a name="[190]"></a>__ARM_exceptions_buffer_allocate</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, arm_exceptions_mem.o(.text), UNUSED)

<P><STRONG><a name="[191]"></a>__ARM_exceptions_buffer_free</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, arm_exceptions_mem.o(.text), UNUSED)

<P><STRONG><a name="[c4]"></a>__ctype_lookup</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, ctype_c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isspace
</UL>

<P><STRONG><a name="[192]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[193]"></a>__decompress1</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[3c]"></a>CCU40_0_IRQHandler</STRONG> (Thumb, 40 bytes, Stack size 120 bytes, timer.o(i.CCU40_0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 488<LI>Call Chain = CCU40_0_IRQHandler &rArr; DJI::onboardSDK::VirtualRC::sendData(DJI::onboardSDK::VirtualRCData) &rArr; DJI::onboardSDK::CoreAPI::send(unsigned char, bool, DJI::onboardSDK::CMD_SET, unsigned char, void*, unsigned, int, int, void(*)(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*), void*) &rArr; DJI::onboardSDK::CoreAPI::sendInterface(DJI::onboardSDK::Command*) &rArr; DJI::onboardSDK::CoreAPI::encrypt(unsigned char*, const unsigned char*, unsigned short, unsigned char, unsigned char, unsigned char, unsigned short) &rArr; encodeData(DJI::onboardSDK::SDKFilter*, DJI::onboardSDK::Header*, void(*)(tagAES256Context*, unsigned char*)) &rArr; aes256_init(tagAES256Context*, unsigned char*) &rArr; aes_expandEncKey(unsigned char*, unsigned char*)
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::VirtualRC::sendData(DJI::onboardSDK::VirtualRCData)
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>CCU40_1_IRQHandler</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, timer.o(i.CCU40_1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = CCU40_1_IRQHandler &rArr; DJI::onboardSDK::Flight::setFlight(DJI::onboardSDK::FlightData*) &rArr; DJI::onboardSDK::CoreAPI::send(unsigned char, bool, DJI::onboardSDK::CMD_SET, unsigned char, void*, unsigned, int, int, void(*)(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*), void*) &rArr; DJI::onboardSDK::CoreAPI::sendInterface(DJI::onboardSDK::Command*) &rArr; DJI::onboardSDK::CoreAPI::encrypt(unsigned char*, const unsigned char*, unsigned short, unsigned char, unsigned char, unsigned char, unsigned short) &rArr; encodeData(DJI::onboardSDK::SDKFilter*, DJI::onboardSDK::Header*, void(*)(tagAES256Context*, unsigned char*)) &rArr; aes256_init(tagAES256Context*, unsigned char*) &rArr; aes_expandEncKey(unsigned char*, unsigned char*)
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::Flight::setFlight(DJI::onboardSDK::FlightData*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[ca]"></a>OSCHP_GetFrequency</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, system_xmc4700.o(i.OSCHP_GetFrequency))
<BR><BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockSetup
</UL>

<P><STRONG><a name="[13]"></a>SysTick_Handler</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, timer.o(i.SysTick_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[c8]"></a>SystemCoreClockSetup</STRONG> (Thumb, 470 bytes, Stack size 8 bytes, system_xmc4700.o(i.SystemCoreClockSetup))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SystemCoreClockSetup &rArr; SystemCoreClockUpdate
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSCHP_GetFrequency
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[cb]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 148 bytes, Stack size 16 bytes, system_xmc4700.o(i.SystemCoreClockUpdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SystemCoreClockUpdate
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSCHP_GetFrequency
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockSetup
</UL>

<P><STRONG><a name="[cc]"></a>SystemCoreSetup</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, system_xmc4700.o(i.SystemCoreSetup))
<BR><BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[7a]"></a>SystemInit</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, system_xmc4700.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SystemInit &rArr; SystemCoreClockSetup &rArr; SystemCoreClockUpdate
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreSetup
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockSetup
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(.text)
</UL>
<P><STRONG><a name="[65]"></a>USIC0_5_IRQHandler</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, receive.o(i.USIC0_5_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USIC0_5_IRQHandler &rArr; fifo_write_ch
</UL>
<BR>[Calls]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_write_ch
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_UART_CH_GetReceivedData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[6b]"></a>USIC1_5_IRQHandler</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, bspusart.o(i.USIC1_5_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 1376<LI>Call Chain = USIC1_5_IRQHandler &rArr; DJI::onboardSDK::CoreAPI::byteHandler(unsigned char) &rArr; DJI::onboardSDK::CoreAPI::streamHandler(DJI::onboardSDK::SDKFilter*, unsigned char) &rArr; DJI::onboardSDK::CoreAPI::checkStream(DJI::onboardSDK::SDKFilter*) &rArr; DJI::onboardSDK::CoreAPI::verifyHead(DJI::onboardSDK::SDKFilter*) &rArr; DJI::onboardSDK::CoreAPI::callApp(DJI::onboardSDK::SDKFilter*) &rArr; DJI::onboardSDK::CoreAPI::appHandler(DJI::onboardSDK::Header*) &rArr; DJI::onboardSDK::CoreAPI::recvReqData(DJI::onboardSDK::Header*) &rArr; DJI::onboardSDK::CoreAPI::broadcast(DJI::onboardSDK::Header*) &rArr; DJI::onboardSDK::CoreAPI::getFlightStatus() const &rArr; DJI::onboardSDK::CoreAPI::getBroadcastData() const &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::byteHandler(unsigned char)
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_UART_CH_GetReceivedData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc4700.o(RESET)
</UL>
<P><STRONG><a name="[d0]"></a>XMC_CCU4_EnableModule</STRONG> (Thumb, 144 bytes, Stack size 16 bytes, xmc_ccu4.o(i.XMC_CCU4_EnableModule))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = XMC_CCU4_EnableModule &rArr; XMC_SCU_RESET_DeassertPeripheralReset
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_SCU_RESET_DeassertPeripheralReset
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_SCU_CLOCK_UngatePeripheralClock
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_SCU_CLOCK_EnableClock
</UL>
<BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_CCU4_Init
</UL>

<P><STRONG><a name="[d4]"></a>XMC_CCU4_Init</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, xmc_ccu4.o(i.XMC_CCU4_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = XMC_CCU4_Init &rArr; XMC_CCU4_EnableModule &rArr; XMC_SCU_RESET_DeassertPeripheralReset
</UL>
<BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_CCU4_EnableModule
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer2Config()
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer1Config()
</UL>

<P><STRONG><a name="[ed]"></a>XMC_CCU4_SLICE_CompareInit</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, xmc_ccu4.o(i.XMC_CCU4_SLICE_CompareInit))
<BR><BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer2Config()
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer1Config()
</UL>

<P><STRONG><a name="[f2]"></a>XMC_CCU4_SLICE_SetInterruptNode</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, xmc_ccu4.o(i.XMC_CCU4_SLICE_SetInterruptNode))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = XMC_CCU4_SLICE_SetInterruptNode
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer2Config()
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer1Config()
</UL>

<P><STRONG><a name="[ec]"></a>XMC_CCU4_SetModuleClock</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, xmc_ccu4.o(i.XMC_CCU4_SetModuleClock))
<BR><BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer2Config()
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer1Config()
</UL>

<P><STRONG><a name="[103]"></a>XMC_GPIO_Init</STRONG> (Thumb, 166 bytes, Stack size 12 bytes, xmc4_gpio.o(i.XMC_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = XMC_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PC_UART_Config()
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;N3_UART_Config()
</UL>

<P><STRONG><a name="[d1]"></a>XMC_SCU_CLOCK_EnableClock</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, xmc4_scu.o(i.XMC_SCU_CLOCK_EnableClock))
<BR><BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_CCU4_EnableModule
</UL>

<P><STRONG><a name="[d9]"></a>XMC_SCU_CLOCK_GetPeripheralClockFrequency</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, xmc4_scu.o(i.XMC_SCU_CLOCK_GetPeripheralClockFrequency))
<BR><BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_USIC_CH_SetBaudrate
</UL>

<P><STRONG><a name="[d2]"></a>XMC_SCU_CLOCK_UngatePeripheralClock</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, xmc4_scu.o(i.XMC_SCU_CLOCK_UngatePeripheralClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = XMC_SCU_CLOCK_UngatePeripheralClock
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_USIC_Enable
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_CCU4_EnableModule
</UL>

<P><STRONG><a name="[d3]"></a>XMC_SCU_RESET_DeassertPeripheralReset</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, xmc4_scu.o(i.XMC_SCU_RESET_DeassertPeripheralReset))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = XMC_SCU_RESET_DeassertPeripheralReset
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_USIC_Enable
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_CCU4_EnableModule
</UL>

<P><STRONG><a name="[cd]"></a>XMC_UART_CH_GetReceivedData</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, xmc_uart.o(i.XMC_UART_CH_GetReceivedData))
<BR><BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USIC1_5_IRQHandler
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USIC0_5_IRQHandler
</UL>

<P><STRONG><a name="[d5]"></a>XMC_UART_CH_Init</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, xmc_uart.o(i.XMC_UART_CH_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = XMC_UART_CH_Init &rArr; XMC_USIC_CH_SetBaudrate
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_USIC_CH_SetBaudrate
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_USIC_CH_Enable
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PC_UART_Config()
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;N3_UART_Config()
</UL>

<P><STRONG><a name="[16f]"></a>XMC_UART_CH_Transmit</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, xmc_uart.o(i.XMC_UART_CH_Transmit))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_4700::send(const unsigned char*, unsigned)
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[d6]"></a>XMC_USIC_CH_Enable</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, xmc_usic.o(i.XMC_USIC_CH_Enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = XMC_USIC_CH_Enable &rArr; XMC_USIC_Enable &rArr; XMC_SCU_RESET_DeassertPeripheralReset
</UL>
<BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_USIC_Enable
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_UART_CH_Init
</UL>

<P><STRONG><a name="[d7]"></a>XMC_USIC_CH_SetBaudrate</STRONG> (Thumb, 146 bytes, Stack size 56 bytes, xmc_usic.o(i.XMC_USIC_CH_SetBaudrate))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = XMC_USIC_CH_SetBaudrate
</UL>
<BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_SCU_CLOCK_GetPeripheralClockFrequency
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_UART_CH_Init
</UL>

<P><STRONG><a name="[111]"></a>XMC_USIC_CH_SetInterruptNodePointer</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, xmc_usic.o(i.XMC_USIC_CH_SetInterruptNodePointer))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = XMC_USIC_CH_SetInterruptNodePointer
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTxNVIC_Config()
</UL>

<P><STRONG><a name="[d8]"></a>XMC_USIC_Enable</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, xmc_usic.o(i.XMC_USIC_Enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = XMC_USIC_Enable &rArr; XMC_SCU_RESET_DeassertPeripheralReset
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_SCU_RESET_DeassertPeripheralReset
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_SCU_CLOCK_UngatePeripheralClock
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_USIC_CH_Enable
</UL>

<P><STRONG><a name="[da]"></a>UartConfig()</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, bspusart.o(i._Z10UartConfigv))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = UartConfig() &rArr; PC_UART_Config() &rArr; XMC_UART_CH_Init &rArr; XMC_USIC_CH_SetBaudrate
</UL>
<BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTxNVIC_Config()
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PC_UART_Config()
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;N3_UART_Config()
</UL>
<BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSPinit()
</UL>

<P><STRONG><a name="[de]"></a>encodeData(DJI::onboardSDK::SDKFilter*, DJI::onboardSDK::Header*, void(*)(tagAES256Context*, unsigned char*))</STRONG> (Thumb, 134 bytes, Stack size 136 bytes, dji_codec.o(i._Z10encodeDataPN3DJI10onboardSDK9SDKFilterEPNS0_6HeaderEPFvP16tagAES256ContextPhE))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = encodeData(DJI::onboardSDK::SDKFilter*, DJI::onboardSDK::Header*, void(*)(tagAES256Context*, unsigned char*)) &rArr; aes256_init(tagAES256Context*, unsigned char*) &rArr; aes_expandEncKey(unsigned char*, unsigned char*)
</UL>
<BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes256_init(tagAES256Context*, unsigned char*)
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes256_done(tagAES256Context*)
</UL>
<BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::encrypt(unsigned char*, const unsigned char*, unsigned short, unsigned char, unsigned char, unsigned char, unsigned short)
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::callApp(DJI::onboardSDK::SDKFilter*)
</UL>

<P><STRONG><a name="[150]"></a>freeMemory(DJI::onboardSDK::MMU_Tab*)</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, dji_memory.o(i._Z10freeMemoryPN3DJI10onboardSDK7MMU_TabE))
<BR><BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::freeACK(DJI::onboardSDK::ACKSession*)
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::freeSession(DJI::onboardSDK::CMDSession*)
</UL>

<P><STRONG><a name="[152]"></a>getCmdCode(DJI::onboardSDK::Header*)</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, dji_app.o(i._Z10getCmdCodePN3DJI10onboardSDK6HeaderE))
<BR><BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::recvReqData(DJI::onboardSDK::Header*)
</UL>

<P><STRONG><a name="[e0]"></a>aes256_done(tagAES256Context*)</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, dji_codec.o(i._Z11aes256_doneP16tagAES256Context))
<BR><BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encodeData(DJI::onboardSDK::SDKFilter*, DJI::onboardSDK::Header*, void(*)(tagAES256Context*, unsigned char*))
</UL>

<P><STRONG><a name="[df]"></a>aes256_init(tagAES256Context*, unsigned char*)</STRONG> (Thumb, 58 bytes, Stack size 20 bytes, dji_codec.o(i._Z11aes256_initP16tagAES256ContextPh))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = aes256_init(tagAES256Context*, unsigned char*) &rArr; aes_expandEncKey(unsigned char*, unsigned char*)
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes_expandEncKey(unsigned char*, unsigned char*)
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encodeData(DJI::onboardSDK::SDKFilter*, DJI::onboardSDK::Header*, void(*)(tagAES256Context*, unsigned char*))
</UL>

<P><STRONG><a name="[e2]"></a>tryHotpoint(double, float, float)</STRONG> (Thumb, 200 bytes, Stack size 464 bytes, hotpoint.o(i._Z11tryHotpointdff))
<BR><BR>[Stack]<UL><LI>Max Depth = 824<LI>Call Chain = tryHotpoint(double, float, float) &rArr; DJI::onboardSDK::HotPoint::start(void(*)(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*), void*) &rArr; DJI::onboardSDK::CoreAPI::send(unsigned char, bool, DJI::onboardSDK::CMD_SET, unsigned char, void*, unsigned, int, int, void(*)(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*), void*) &rArr; DJI::onboardSDK::CoreAPI::sendInterface(DJI::onboardSDK::Command*) &rArr; DJI::onboardSDK::CoreAPI::encrypt(unsigned char*, const unsigned char*, unsigned short, unsigned char, unsigned char, unsigned char, unsigned short) &rArr; encodeData(DJI::onboardSDK::SDKFilter*, DJI::onboardSDK::Header*, void(*)(tagAES256Context*, unsigned char*)) &rArr; aes256_init(tagAES256Context*, unsigned char*) &rArr; aes_expandEncKey(unsigned char*, unsigned char*)
</UL>
<BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::getBroadcastData() const
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::HotPoint::setRadius(double)
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::HotPoint::start(void(*)(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*), void*)
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::HotPoint::setHotPoint(DJI::onboardSDK::GPSPositionData)
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::HotPoint::setYawRate(float)
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TerminalCommand::terminalCommandHandler(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Flight*)
</UL>

<P><STRONG><a name="[ea]"></a>Timer1Config()</STRONG> (Thumb, 102 bytes, Stack size 8 bytes, timer.o(i._Z12Timer1Configv))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Timer1Config() &rArr; XMC_CCU4_Init &rArr; XMC_CCU4_EnableModule &rArr; XMC_SCU_RESET_DeassertPeripheralReset
</UL>
<BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_CCU4_SetModuleClock
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_CCU4_SLICE_SetInterruptNode
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_CCU4_SLICE_CompareInit
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_CCU4_Init
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_CCU4_SLICE_SetTimerCompareMatch(CCU4_CC4_TypeDef*, unsigned short)
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_CCU4_SLICE_SetTimerPeriodMatch(CCU4_CC4_TypeDef*, unsigned short)
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_CCU4_EnableShadowTransfer(CCU4_GLOBAL_TypeDef*, unsigned)
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_CCU4_SLICE_EnableEvent(CCU4_CC4_TypeDef*, XMC_CCU4_SLICE_IRQ_ID)
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_CCU4_StartPrescaler(CCU4_GLOBAL_TypeDef*)
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_CCU4_EnableClock(CCU4_GLOBAL_TypeDef*, unsigned char)
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority(IRQn_Type, unsigned)
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ(IRQn_Type)
</UL>
<BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSPinit()
</UL>

<P><STRONG><a name="[f6]"></a>Timer2Config()</STRONG> (Thumb, 102 bytes, Stack size 8 bytes, timer.o(i._Z12Timer2Configv))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Timer2Config() &rArr; XMC_CCU4_Init &rArr; XMC_CCU4_EnableModule &rArr; XMC_SCU_RESET_DeassertPeripheralReset
</UL>
<BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_CCU4_SetModuleClock
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_CCU4_SLICE_SetInterruptNode
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_CCU4_SLICE_CompareInit
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_CCU4_Init
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_CCU4_SLICE_SetTimerCompareMatch(CCU4_CC4_TypeDef*, unsigned short)
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_CCU4_SLICE_SetTimerPeriodMatch(CCU4_CC4_TypeDef*, unsigned short)
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_CCU4_EnableShadowTransfer(CCU4_GLOBAL_TypeDef*, unsigned)
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_CCU4_SLICE_EnableEvent(CCU4_CC4_TypeDef*, XMC_CCU4_SLICE_IRQ_ID)
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_CCU4_StartPrescaler(CCU4_GLOBAL_TypeDef*)
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_CCU4_EnableClock(CCU4_GLOBAL_TypeDef*, unsigned char)
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority(IRQn_Type, unsigned)
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ(IRQn_Type)
</UL>
<BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSPinit()
</UL>

<P><STRONG><a name="[f7]"></a>VRCResetData()</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, virtualrc.o(i._Z12VRCResetDatav))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = VRCResetData() &rArr; DJI::onboardSDK::VirtualRC::setControl(bool, DJI::onboardSDK::VirtualRC::CutOff) &rArr; DJI::onboardSDK::CoreAPI::send(unsigned char, bool, DJI::onboardSDK::CMD_SET, unsigned char, void*, unsigned, int, int, void(*)(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*), void*) &rArr; DJI::onboardSDK::CoreAPI::sendInterface(DJI::onboardSDK::Command*) &rArr; DJI::onboardSDK::CoreAPI::encrypt(unsigned char*, const unsigned char*, unsigned short, unsigned char, unsigned char, unsigned char, unsigned short) &rArr; encodeData(DJI::onboardSDK::SDKFilter*, DJI::onboardSDK::Header*, void(*)(tagAES256Context*, unsigned char*)) &rArr; aes256_init(tagAES256Context*, unsigned char*) &rArr; aes_expandEncKey(unsigned char*, unsigned char*)
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::VirtualRC::setControl(bool, DJI::onboardSDK::VirtualRC::CutOff)
</UL>
<BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TerminalCommand::terminalCommandHandler(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Flight*)
</UL>

<P><STRONG><a name="[11d]"></a>aes_subBytes(unsigned char*)</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, dji_codec.o(i._Z12aes_subBytesPh))
<BR><BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes256_encrypt_ecb(tagAES256Context*, unsigned char*)
</UL>

<P><STRONG><a name="[f9]"></a>calculateCRC(void*)</STRONG> (Thumb, 110 bytes, Stack size 20 bytes, dji_codec.o(i._Z12calculateCRCPv))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = calculateCRC(void*) &rArr; sdk_stream_crc32_calc(const unsigned char*, unsigned) &rArr; crc32_update(unsigned, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdk_stream_crc32_calc(const unsigned char*, unsigned)
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdk_stream_crc16_calc(const unsigned char*, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::encrypt(unsigned char*, const unsigned char*, unsigned short, unsigned char, unsigned char, unsigned char, unsigned short)
</UL>

<P><STRONG><a name="[130]"></a>crc16_update(unsigned short, unsigned char)</STRONG> (Thumb, 22 bytes, Stack size 12 bytes, dji_codec.o(i._Z12crc16_updateth))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = crc16_update(unsigned short, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdk_stream_crc16_calc(const unsigned char*, unsigned)
</UL>

<P><STRONG><a name="[131]"></a>crc32_update(unsigned, unsigned char)</STRONG> (Thumb, 22 bytes, Stack size 12 bytes, dji_codec.o(i._Z12crc32_updatejh))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = crc32_update(unsigned, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdk_stream_crc32_calc(const unsigned char*, unsigned)
</UL>

<P><STRONG><a name="[fc]"></a>stopHotpoint()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, hotpoint.o(i._Z12stopHotpointv))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = stopHotpoint() &rArr; DJI::onboardSDK::HotPoint::stop(void(*)(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*), void*) &rArr; DJI::onboardSDK::CoreAPI::send(unsigned char, bool, DJI::onboardSDK::CMD_SET, unsigned char, void*, unsigned, int, int, void(*)(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*), void*) &rArr; DJI::onboardSDK::CoreAPI::sendInterface(DJI::onboardSDK::Command*) &rArr; DJI::onboardSDK::CoreAPI::encrypt(unsigned char*, const unsigned char*, unsigned short, unsigned char, unsigned char, unsigned char, unsigned short) &rArr; encodeData(DJI::onboardSDK::SDKFilter*, DJI::onboardSDK::Header*, void(*)(tagAES256Context*, unsigned char*)) &rArr; aes256_init(tagAES256Context*, unsigned char*) &rArr; aes_expandEncKey(unsigned char*, unsigned char*)
</UL>
<BR>[Calls]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::HotPoint::stop(void(*)(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*), void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TerminalCommand::terminalCommandHandler(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Flight*)
</UL>

<P><STRONG><a name="[fe]"></a>SystickConfig()</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, timer.o(i._Z13SystickConfigv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SystickConfig() &rArr; NVIC_SetPriority(IRQn_Type, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority(IRQn_Type, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSPinit()
</UL>

<P><STRONG><a name="[ff]"></a>User_Activate()</STRONG> (Thumb, 34 bytes, Stack size 56 bytes, activate.o(i._Z13User_Activatev))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = User_Activate() &rArr; DJI::onboardSDK::CoreAPI::activate(DJI::onboardSDK::ActivateData*, void(*)(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*), void*) &rArr; DJI::onboardSDK::CoreAPI::send(unsigned char, bool, DJI::onboardSDK::CMD_SET, unsigned char, void*, unsigned, int, int, void(*)(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*), void*) &rArr; DJI::onboardSDK::CoreAPI::sendInterface(DJI::onboardSDK::Command*) &rArr; DJI::onboardSDK::CoreAPI::encrypt(unsigned char*, const unsigned char*, unsigned short, unsigned char, unsigned char, unsigned char, unsigned short) &rArr; encodeData(DJI::onboardSDK::SDKFilter*, DJI::onboardSDK::Header*, void(*)(tagAES256Context*, unsigned char*)) &rArr; aes256_init(tagAES256Context*, unsigned char*) &rArr; aes_expandEncKey(unsigned char*, unsigned char*)
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::activate(DJI::onboardSDK::ActivateData*, void(*)(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*), void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TerminalCommand::terminalCommandHandler(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Flight*)
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mobileCommandHandler(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Flight*)
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[11e]"></a>aes_shiftRows(unsigned char*)</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, dji_codec.o(i._Z13aes_shiftRowsPh))
<BR><BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes256_encrypt_ecb(tagAES256Context*, unsigned char*)
</UL>

<P><STRONG><a name="[dc]"></a>N3_UART_Config()</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, bspusart.o(i._Z14N3_UART_Configv))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = N3_UART_Config() &rArr; XMC_UART_CH_Init &rArr; XMC_USIC_CH_SetBaudrate
</UL>
<BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_UART_CH_Init
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_GPIO_Init
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_UART_CH_SetInputSource(XMC_USIC_CH*, XMC_UART_CH_INPUT, unsigned char)
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_UART_CH_Start(XMC_USIC_CH*)
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartConfig()
</UL>

<P><STRONG><a name="[db]"></a>PC_UART_Config()</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, bspusart.o(i._Z14PC_UART_Configv))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = PC_UART_Config() &rArr; XMC_UART_CH_Init &rArr; XMC_USIC_CH_SetBaudrate
</UL>
<BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_UART_CH_Init
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_GPIO_Init
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_UART_CH_SetInputSource(XMC_USIC_CH*, XMC_UART_CH_INPUT, unsigned char)
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_UART_CH_Start(XMC_USIC_CH*)
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartConfig()
</UL>

<P><STRONG><a name="[104]"></a>aes_mixColumns(unsigned char*)</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, dji_codec.o(i._Z14aes_mixColumnsPh))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = aes_mixColumns(unsigned char*)
</UL>
<BR>[Calls]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rj_xtime(unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes256_encrypt_ecb(tagAES256Context*, unsigned char*)
</UL>

<P><STRONG><a name="[8f]"></a>myRecvCallback(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*)</STRONG> (Thumb, 192 bytes, Stack size 440 bytes, localnavigation.o(i._Z14myRecvCallbackPN3DJI10onboardSDK7CoreAPIEPNS0_6HeaderEPv))
<BR><BR>[Stack]<UL><LI>Max Depth = 1320<LI>Call Chain = myRecvCallback(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*) &rArr; updateCurveFollowing() &rArr; DJI::onboardSDK::Flight::setMovementControl(unsigned char, float, float, float, float) &rArr; DJI::onboardSDK::CoreAPI::send(unsigned char, bool, DJI::onboardSDK::CMD_SET, unsigned char, void*, unsigned, int, int, void(*)(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*), void*) &rArr; DJI::onboardSDK::CoreAPI::sendInterface(DJI::onboardSDK::Command*) &rArr; DJI::onboardSDK::CoreAPI::encrypt(unsigned char*, const unsigned char*, unsigned short, unsigned char, unsigned char, unsigned char, unsigned short) &rArr; encodeData(DJI::onboardSDK::SDKFilter*, DJI::onboardSDK::Header*, void(*)(tagAES256Context*, unsigned char*)) &rArr; aes256_init(tagAES256Context*, unsigned char*) &rArr; aes_expandEncKey(unsigned char*, unsigned char*)
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::getBroadcastData() const
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::getFlightStatus() const
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateCurveFollowing()
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.main)
</UL>
<P><STRONG><a name="[109]"></a>serial_read_ch()</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, receive.o(i._Z14serial_read_chv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = serial_read_ch()
</UL>
<BR>[Calls]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_read_ch
</UL>
<BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TerminalCommand::terminalCommandHandler(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Flight*)
</UL>

<P><STRONG><a name="[10b]"></a>VRC_TakeControl()</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, virtualrc.o(i._Z15VRC_TakeControlv))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = VRC_TakeControl() &rArr; DJI::onboardSDK::VirtualRC::setControl(bool, DJI::onboardSDK::VirtualRC::CutOff) &rArr; DJI::onboardSDK::CoreAPI::send(unsigned char, bool, DJI::onboardSDK::CMD_SET, unsigned char, void*, unsigned, int, int, void(*)(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*), void*) &rArr; DJI::onboardSDK::CoreAPI::sendInterface(DJI::onboardSDK::Command*) &rArr; DJI::onboardSDK::CoreAPI::encrypt(unsigned char*, const unsigned char*, unsigned short, unsigned char, unsigned char, unsigned char, unsigned short) &rArr; encodeData(DJI::onboardSDK::SDKFilter*, DJI::onboardSDK::Header*, void(*)(tagAES256Context*, unsigned char*)) &rArr; aes256_init(tagAES256Context*, unsigned char*) &rArr; aes_expandEncKey(unsigned char*, unsigned char*)
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::VirtualRC::setControl(bool, DJI::onboardSDK::VirtualRC::CutOff)
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TerminalCommand::terminalCommandHandler(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Flight*)
</UL>

<P><STRONG><a name="[11b]"></a>aes_addRoundKey(unsigned char*, unsigned char*)</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, dji_codec.o(i._Z15aes_addRoundKeyPhS_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = aes_addRoundKey(unsigned char*, unsigned char*)
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes256_encrypt_ecb(tagAES256Context*, unsigned char*)
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes256_decrypt_ecb(tagAES256Context*, unsigned char*)
</UL>

<P><STRONG><a name="[156]"></a>calculateLength(unsigned short, unsigned short)</STRONG> (Thumb, 46 bytes, Stack size 12 bytes, dji_link.o(i._Z15calculateLengthtt))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = calculateLength(unsigned short, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::sendInterface(DJI::onboardSDK::Command*)
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::ackInterface(DJI::onboardSDK::Ack*)
</UL>

<P><STRONG><a name="[10e]"></a>InitSoftwareFIFO()</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, receive.o(i._Z16InitSoftwareFIFOv))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = InitSoftwareFIFO() &rArr; fifo_init
</UL>
<BR>[Calls]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_init
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[dd]"></a>UARTxNVIC_Config()</STRONG> (Thumb, 128 bytes, Stack size 8 bytes, bspusart.o(i._Z16UARTxNVIC_Configv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UARTxNVIC_Config() &rArr; XMC_USIC_CH_SetInterruptNodePointer
</UL>
<BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_USIC_CH_SetInterruptNodePointer
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_USIC_CH_EnableEvent(XMC_USIC_CH*, unsigned)
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority(IRQn_Type, unsigned)
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ(IRQn_Type)
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartConfig()
</UL>

<P><STRONG><a name="[11a]"></a>aes_expandDecKey(unsigned char*, unsigned char*)</STRONG> (Thumb, 246 bytes, Stack size 12 bytes, dji_codec.o(i._Z16aes_expandDecKeyPhS_))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = aes_expandDecKey(unsigned char*, unsigned char*)
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes256_decrypt_ecb(tagAES256Context*, unsigned char*)
</UL>

<P><STRONG><a name="[e1]"></a>aes_expandEncKey(unsigned char*, unsigned char*)</STRONG> (Thumb, 244 bytes, Stack size 12 bytes, dji_codec.o(i._Z16aes_expandEncKeyPhS_))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = aes_expandEncKey(unsigned char*, unsigned char*)
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes256_encrypt_ecb(tagAES256Context*, unsigned char*)
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes256_init(tagAES256Context*, unsigned char*)
</UL>

<P><STRONG><a name="[119]"></a>aes_subBytes_inv(unsigned char*)</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, dji_codec.o(i._Z16aes_subBytes_invPh))
<BR><BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes256_decrypt_ecb(tagAES256Context*, unsigned char*)
</UL>

<P><STRONG><a name="[114]"></a>serial_available()</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, receive.o(i._Z16serial_availablev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = serial_available()
</UL>
<BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_used
</UL>
<BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TerminalCommand::terminalCommandHandler(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Flight*)
</UL>

<P><STRONG><a name="[116]"></a>transformTwoByte(const char*, unsigned char*)</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, dji_codec.o(i._Z16transformTwoBytePKcPh))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = transformTwoByte(const char*, unsigned char*) &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_int
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sscanf
</UL>
<BR>[Called By]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::setKey(const char*)
</UL>

<P><STRONG><a name="[118]"></a>aes_shiftRows_inv(unsigned char*)</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, dji_codec.o(i._Z17aes_shiftRows_invPh))
<BR><BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes256_decrypt_ecb(tagAES256Context*, unsigned char*)
</UL>

<P><STRONG><a name="[81]"></a>aes256_decrypt_ecb(tagAES256Context*, unsigned char*)</STRONG> (Thumb, 108 bytes, Stack size 20 bytes, dji_codec.o(i._Z18aes256_decrypt_ecbP16tagAES256ContextPh))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = aes256_decrypt_ecb(tagAES256Context*, unsigned char*) &rArr; aes_mixColumns_inv(unsigned char*)
</UL>
<BR>[Calls]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes_addRoundKey_cpy(unsigned char*, unsigned char*, unsigned char*)
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes_mixColumns_inv(unsigned char*)
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes_shiftRows_inv(unsigned char*)
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes_subBytes_inv(unsigned char*)
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes_expandDecKey(unsigned char*, unsigned char*)
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes_addRoundKey(unsigned char*, unsigned char*)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> dji_codec.o(i._Z10encodeDataPN3DJI10onboardSDK9SDKFilterEPNS0_6HeaderEPFvP16tagAES256ContextPhE)
<LI> dji_codec.o(i._ZN3DJI10onboardSDK7CoreAPI7callAppEPNS0_9SDKFilterE)
</UL>
<P><STRONG><a name="[88]"></a>aes256_encrypt_ecb(tagAES256Context*, unsigned char*)</STRONG> (Thumb, 116 bytes, Stack size 20 bytes, dji_codec.o(i._Z18aes256_encrypt_ecbP16tagAES256ContextPh))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = aes256_encrypt_ecb(tagAES256Context*, unsigned char*) &rArr; aes_mixColumns(unsigned char*)
</UL>
<BR>[Calls]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes_addRoundKey_cpy(unsigned char*, unsigned char*, unsigned char*)
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes_expandEncKey(unsigned char*, unsigned char*)
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes_addRoundKey(unsigned char*, unsigned char*)
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes_mixColumns(unsigned char*)
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes_shiftRows(unsigned char*)
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes_subBytes(unsigned char*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dji_codec.o(i._ZN3DJI10onboardSDK7CoreAPI7encryptEPhPKhthhht)
</UL>
<P><STRONG><a name="[11c]"></a>aes_mixColumns_inv(unsigned char*)</STRONG> (Thumb, 182 bytes, Stack size 40 bytes, dji_codec.o(i._Z18aes_mixColumns_invPh))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = aes_mixColumns_inv(unsigned char*)
</UL>
<BR>[Calls]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rj_xtime(unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes256_decrypt_ecb(tagAES256Context*, unsigned char*)
</UL>

<P><STRONG><a name="[117]"></a>aes_addRoundKey_cpy(unsigned char*, unsigned char*, unsigned char*)</STRONG> (Thumb, 38 bytes, Stack size 12 bytes, dji_codec.o(i._Z19aes_addRoundKey_cpyPhS_S_))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = aes_addRoundKey_cpy(unsigned char*, unsigned char*, unsigned char*)
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes256_encrypt_ecb(tagAES256Context*, unsigned char*)
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes256_decrypt_ecb(tagAES256Context*, unsigned char*)
</UL>

<P><STRONG><a name="[12c]"></a>stopLocalNavExample()</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, localnavigation.o(i._Z19stopLocalNavExamplev))
<BR><BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TerminalCommand::terminalCommandHandler(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Flight*)
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mobileCommandHandler(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Flight*)
</UL>

<P><STRONG><a name="[125]"></a>mobileCommandHandler(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Flight*)</STRONG> (Thumb, 596 bytes, Stack size 24 bytes, mobilecommand.o(i._Z20mobileCommandHandlerPN3DJI10onboardSDK7CoreAPIEPNS0_6FlightE))
<BR><BR>[Stack]<UL><LI>Max Depth = 448<LI>Call Chain = mobileCommandHandler(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Flight*) &rArr; User_Activate() &rArr; DJI::onboardSDK::CoreAPI::activate(DJI::onboardSDK::ActivateData*, void(*)(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*), void*) &rArr; DJI::onboardSDK::CoreAPI::send(unsigned char, bool, DJI::onboardSDK::CMD_SET, unsigned char, void*, unsigned, int, int, void(*)(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*), void*) &rArr; DJI::onboardSDK::CoreAPI::sendInterface(DJI::onboardSDK::Command*) &rArr; DJI::onboardSDK::CoreAPI::encrypt(unsigned char*, const unsigned char*, unsigned short, unsigned char, unsigned char, unsigned char, unsigned short) &rArr; encodeData(DJI::onboardSDK::SDKFilter*, DJI::onboardSDK::Header*, void(*)(tagAES256Context*, unsigned char*)) &rArr; aes256_init(tagAES256Context*, unsigned char*) &rArr; aes_expandEncKey(unsigned char*, unsigned char*)
</UL>
<BR>[Calls]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_nms(unsigned short)
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;User_Activate()
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::getSimpleACK() const
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::sendToMobile(unsigned char*, unsigned char, void(*)(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*), void*)
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::setControl(bool, void(*)(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*), void*)
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::Flight::setArm(bool, void(*)(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*), void*)
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::Flight::task(DJI::onboardSDK::Flight::TASK, void(*)(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*), void*)
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startLocalNavExample()
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stopLocalNavExample()
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[12d]"></a>startLocalNavExample()</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, localnavigation.o(i._Z20startLocalNavExamplev))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = startLocalNavExample() &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TerminalCommand::terminalCommandHandler(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Flight*)
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mobileCommandHandler(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Flight*)
</UL>

<P><STRONG><a name="[106]"></a>updateCurveFollowing()</STRONG> (Thumb, 278 bytes, Stack size 72 bytes, localnavigation.o(i._Z20updateCurveFollowingv))
<BR><BR>[Stack]<UL><LI>Max Depth = 880<LI>Call Chain = updateCurveFollowing() &rArr; DJI::onboardSDK::Flight::setMovementControl(unsigned char, float, float, float, float) &rArr; DJI::onboardSDK::CoreAPI::send(unsigned char, bool, DJI::onboardSDK::CMD_SET, unsigned char, void*, unsigned, int, int, void(*)(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*), void*) &rArr; DJI::onboardSDK::CoreAPI::sendInterface(DJI::onboardSDK::Command*) &rArr; DJI::onboardSDK::CoreAPI::encrypt(unsigned char*, const unsigned char*, unsigned short, unsigned char, unsigned char, unsigned char, unsigned short) &rArr; encodeData(DJI::onboardSDK::SDKFilter*, DJI::onboardSDK::Header*, void(*)(tagAES256Context*, unsigned char*)) &rArr; aes256_init(tagAES256Context*, unsigned char*) &rArr; aes_expandEncKey(unsigned char*, unsigned char*)
</UL>
<BR>[Calls]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_convert_ned(DJI::onboardSDK::PositionData, DJI::onboardSDK::PositionData)
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_sin_f32
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_cos_f32
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::Flight::setMovementControl(unsigned char, float, float, float, float)
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;myRecvCallback(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*)
</UL>

<P><STRONG><a name="[fa]"></a>sdk_stream_crc16_calc(const unsigned char*, unsigned)</STRONG> (Thumb, 34 bytes, Stack size 20 bytes, dji_codec.o(i._Z21sdk_stream_crc16_calcPKhj))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = sdk_stream_crc16_calc(const unsigned char*, unsigned) &rArr; crc16_update(unsigned short, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc16_update(unsigned short, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::verifyHead(DJI::onboardSDK::SDKFilter*)
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculateCRC(void*)
</UL>

<P><STRONG><a name="[fb]"></a>sdk_stream_crc32_calc(const unsigned char*, unsigned)</STRONG> (Thumb, 34 bytes, Stack size 20 bytes, dji_codec.o(i._Z21sdk_stream_crc32_calcPKhj))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = sdk_stream_crc32_calc(const unsigned char*, unsigned) &rArr; crc32_update(unsigned, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc32_update(unsigned, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::verifyData(DJI::onboardSDK::SDKFilter*)
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculateCRC(void*)
</UL>

<P><STRONG><a name="[133]"></a>sdk_stream_prepare_lambda(DJI::onboardSDK::SDKFilter*)</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, dji_codec.o(i._Z25sdk_stream_prepare_lambdaPN3DJI10onboardSDK9SDKFilterE))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = sdk_stream_prepare_lambda(DJI::onboardSDK::SDKFilter*) &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memmove
</UL>
<BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::callApp(DJI::onboardSDK::SDKFilter*)
</UL>

<P><STRONG><a name="[135]"></a>sdk_stream_shift_data_lambda(DJI::onboardSDK::SDKFilter*)</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, dji_codec.o(i._Z28sdk_stream_shift_data_lambdaPN3DJI10onboardSDK9SDKFilterE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = sdk_stream_shift_data_lambda(DJI::onboardSDK::SDKFilter*) &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memmove
</UL>
<BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::verifyHead(DJI::onboardSDK::SDKFilter*)
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdk_stream_update_reuse_part_lambda(DJI::onboardSDK::SDKFilter*)
</UL>

<P><STRONG><a name="[136]"></a>sdk_stream_update_reuse_part_lambda(DJI::onboardSDK::SDKFilter*)</STRONG> (Thumb, 60 bytes, Stack size 32 bytes, dji_codec.o(i._Z35sdk_stream_update_reuse_part_lambdaPN3DJI10onboardSDK9SDKFilterE))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = sdk_stream_update_reuse_part_lambda(DJI::onboardSDK::SDKFilter*) &rArr; sdk_stream_shift_data_lambda(DJI::onboardSDK::SDKFilter*) &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdk_stream_shift_data_lambda(DJI::onboardSDK::SDKFilter*)
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memmove
</UL>
<BR>[Called By]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::verifyData(DJI::onboardSDK::SDKFilter*)
</UL>

<P><STRONG><a name="[137]"></a>BSPinit()</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, bsp.o(i._Z7BSPinitv))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = BSPinit() &rArr; UartConfig() &rArr; PC_UART_Config() &rArr; XMC_UART_CH_Init &rArr; XMC_USIC_CH_SetBaudrate
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystickConfig()
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer2Config()
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer1Config()
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartConfig()
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[138]"></a>passData(unsigned short, unsigned short&, void*, unsigned char*, unsigned, unsigned&)</STRONG> (Thumb, 58 bytes, Stack size 32 bytes, dji_app.o(i._Z8passDatatRtPvPhjRj))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = passData(unsigned short, unsigned short&, void*, unsigned char*, unsigned, unsigned&) &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::broadcast(DJI::onboardSDK::Header*)
</UL>

<P><STRONG><a name="[105]"></a>rj_xtime(unsigned char)</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, dji_codec.o(i._Z8rj_xtimeh))
<BR><BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes_mixColumns_inv(unsigned char*)
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes_mixColumns(unsigned char*)
</UL>

<P><STRONG><a name="[127]"></a>delay_nms(unsigned short)</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, timer.o(i._Z9delay_nmst))
<BR><BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mobileCommandHandler(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Flight*)
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[151]"></a>getCmdSet(DJI::onboardSDK::Header*)</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, dji_app.o(i._Z9getCmdSetPN3DJI10onboardSDK6HeaderE))
<BR><BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::recvReqData(DJI::onboardSDK::Header*)
</UL>

<P><STRONG><a name="[139]"></a>TerminalCommand::terminalCommandHandler(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Flight*)</STRONG> (Thumb, 1002 bytes, Stack size 456 bytes, receive.o(i._ZN15TerminalCommand22terminalCommandHandlerEPN3DJI10onboardSDK7CoreAPIEPNS1_6FlightE))
<BR><BR>[Stack]<UL><LI>Max Depth = 1280<LI>Call Chain = TerminalCommand::terminalCommandHandler(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Flight*) &rArr; tryHotpoint(double, float, float) &rArr; DJI::onboardSDK::HotPoint::start(void(*)(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*), void*) &rArr; DJI::onboardSDK::CoreAPI::send(unsigned char, bool, DJI::onboardSDK::CMD_SET, unsigned char, void*, unsigned, int, int, void(*)(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*), void*) &rArr; DJI::onboardSDK::CoreAPI::sendInterface(DJI::onboardSDK::Command*) &rArr; DJI::onboardSDK::CoreAPI::encrypt(unsigned char*, const unsigned char*, unsigned short, unsigned char, unsigned char, unsigned char, unsigned short) &rArr; encodeData(DJI::onboardSDK::SDKFilter*, DJI::onboardSDK::Header*, void(*)(tagAES256Context*, unsigned char*)) &rArr; aes256_init(tagAES256Context*, unsigned char*) &rArr; aes_expandEncKey(unsigned char*, unsigned char*)
</UL>
<BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::getBroadcastData() const
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stopHotpoint()
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tryHotpoint(double, float, float)
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::getDroneVersion(void(*)(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*), void*)
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;User_Activate()
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::Flight::setFlight(DJI::onboardSDK::FlightData*)
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VRC_TakeControl()
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VRCResetData()
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serial_available()
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serial_read_ch()
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hex2Float(unsigned char, unsigned char)
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mavlink_parse_char(unsigned char, unsigned char, __mavlink_message*, __mavlink_status*)
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::setControl(bool, void(*)(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*), void*)
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::Flight::setArm(bool, void(*)(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*), void*)
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::Flight::task(DJI::onboardSDK::Flight::TASK, void(*)(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*), void*)
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startLocalNavExample()
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stopLocalNavExample()
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9e]"></a>DJI::onboardSDK::HardDriver::displayLog(const char*)</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, dji_harddriver.o(i._ZN3DJI10onboardSDK10HardDriver10displayLogEPKc))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = DJI::onboardSDK::HardDriver::displayLog(const char*) &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 2]<UL><LI> driver.o(.constdata__ZTV8XMC_4700)
<LI> dji_harddriver.o(.constdata__ZTVN3DJI10onboardSDK10HardDriverE)
</UL>
<P><STRONG><a name="[9c]"></a>DJI::onboardSDK::HardDriver::freeNonBlockCBAck()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, driver.o(i._ZN3DJI10onboardSDK10HardDriver17freeNonBlockCBAckEv))
<BR>[Address Reference Count : 2]<UL><LI> driver.o(.constdata__ZTV8XMC_4700)
<LI> dji_harddriver.o(.constdata__ZTVN3DJI10onboardSDK10HardDriverE)
</UL>
<P><STRONG><a name="[9b]"></a>DJI::onboardSDK::HardDriver::lockNonBlockCBAck()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, driver.o(i._ZN3DJI10onboardSDK10HardDriver17lockNonBlockCBAckEv))
<BR>[Address Reference Count : 2]<UL><LI> driver.o(.constdata__ZTV8XMC_4700)
<LI> dji_harddriver.o(.constdata__ZTVN3DJI10onboardSDK10HardDriverE)
</UL>
<P><STRONG><a name="[9a]"></a>DJI::onboardSDK::HardDriver::freeProtocolHeader()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, driver.o(i._ZN3DJI10onboardSDK10HardDriver18freeProtocolHeaderEv))
<BR>[Address Reference Count : 2]<UL><LI> driver.o(.constdata__ZTV8XMC_4700)
<LI> dji_harddriver.o(.constdata__ZTVN3DJI10onboardSDK10HardDriverE)
</UL>
<P><STRONG><a name="[99]"></a>DJI::onboardSDK::HardDriver::lockProtocolHeader()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, driver.o(i._ZN3DJI10onboardSDK10HardDriver18lockProtocolHeaderEv))
<BR>[Address Reference Count : 2]<UL><LI> driver.o(.constdata__ZTV8XMC_4700)
<LI> dji_harddriver.o(.constdata__ZTVN3DJI10onboardSDK10HardDriverE)
</UL>
<P><STRONG><a name="[9d]"></a>DJI::onboardSDK::HardDriver::notifyNonBlockCBAckRecv()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, driver.o(i._ZN3DJI10onboardSDK10HardDriver23notifyNonBlockCBAckRecvEv))
<BR>[Address Reference Count : 2]<UL><LI> driver.o(.constdata__ZTV8XMC_4700)
<LI> dji_harddriver.o(.constdata__ZTVN3DJI10onboardSDK10HardDriverE)
</UL>
<P><STRONG><a name="[8a]"></a>DJI::onboardSDK::missionCallback(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*)</STRONG> (Thumb, 216 bytes, Stack size 40 bytes, dji_mission.o(i._ZN3DJI10onboardSDK15missionCallbackEPNS0_7CoreAPIEPNS0_6HeaderEPv))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = DJI::onboardSDK::missionCallback(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*) &rArr; DJI::onboardSDK::CoreAPI::decodeMissionStatus(unsigned char) &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::getDriver() const
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::decodeMissionStatus(unsigned char)
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dji_hotpoint.o(i._ZN3DJI10onboardSDK8HotPoint4stopEPFvPNS0_7CoreAPIEPNS0_6HeaderEPvES6_)
</UL>
<P><STRONG><a name="[83]"></a>DJI::onboardSDK::Flight::armCallback(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*)</STRONG> (Thumb, 450 bytes, Stack size 40 bytes, dji_flight.o(i._ZN3DJI10onboardSDK6Flight11armCallbackEPNS0_7CoreAPIEPNS0_6HeaderEPv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = DJI::onboardSDK::Flight::armCallback(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*) &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::getDriver() const
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dji_flight.o(i._ZN3DJI10onboardSDK6Flight6setArmEbPFvPNS0_7CoreAPIEPNS0_6HeaderEPvES6_)
</UL>
<P><STRONG><a name="[82]"></a>DJI::onboardSDK::Flight::taskCallback(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*)</STRONG> (Thumb, 206 bytes, Stack size 40 bytes, dji_flight.o(i._ZN3DJI10onboardSDK6Flight12taskCallbackEPNS0_7CoreAPIEPNS0_6HeaderEPv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = DJI::onboardSDK::Flight::taskCallback(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*) &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::getDriver() const
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dji_flight.o(i._ZN3DJI10onboardSDK6Flight4taskENS1_4TASKEPFvPNS0_7CoreAPIEPNS0_6HeaderEPvES7_)
</UL>
<P><STRONG><a name="[12e]"></a>DJI::onboardSDK::Flight::setMovementControl(unsigned char, float, float, float, float)</STRONG> (Thumb, 678 bytes, Stack size 496 bytes, dji_flight.o(i._ZN3DJI10onboardSDK6Flight18setMovementControlEhffff))
<BR><BR>[Stack]<UL><LI>Max Depth = 808<LI>Call Chain = DJI::onboardSDK::Flight::setMovementControl(unsigned char, float, float, float, float) &rArr; DJI::onboardSDK::CoreAPI::send(unsigned char, bool, DJI::onboardSDK::CMD_SET, unsigned char, void*, unsigned, int, int, void(*)(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*), void*) &rArr; DJI::onboardSDK::CoreAPI::sendInterface(DJI::onboardSDK::Command*) &rArr; DJI::onboardSDK::CoreAPI::encrypt(unsigned char*, const unsigned char*, unsigned short, unsigned char, unsigned char, unsigned char, unsigned short) &rArr; encodeData(DJI::onboardSDK::SDKFilter*, DJI::onboardSDK::Header*, void(*)(tagAES256Context*, unsigned char*)) &rArr; aes256_init(tagAES256Context*, unsigned char*) &rArr; aes_expandEncKey(unsigned char*, unsigned char*)
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::getBroadcastData() const
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::getDriver() const
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::getFwVersion() const
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::send(unsigned char, bool, DJI::onboardSDK::CMD_SET, unsigned char, void*, unsigned, int, int, void(*)(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*), void*)
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateCurveFollowing()
</UL>

<P><STRONG><a name="[12b]"></a>DJI::onboardSDK::Flight::task(DJI::onboardSDK::Flight::TASK, void(*)(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*), void*)</STRONG> (Thumb, 80 bytes, Stack size 48 bytes, dji_flight.o(i._ZN3DJI10onboardSDK6Flight4taskENS1_4TASKEPFvPNS0_7CoreAPIEPNS0_6HeaderEPvES7_))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = DJI::onboardSDK::Flight::task(DJI::onboardSDK::Flight::TASK, void(*)(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*), void*) &rArr; DJI::onboardSDK::CoreAPI::send(unsigned char, bool, DJI::onboardSDK::CMD_SET, unsigned char, void*, unsigned, int, int, void(*)(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*), void*) &rArr; DJI::onboardSDK::CoreAPI::sendInterface(DJI::onboardSDK::Command*) &rArr; DJI::onboardSDK::CoreAPI::encrypt(unsigned char*, const unsigned char*, unsigned short, unsigned char, unsigned char, unsigned char, unsigned short) &rArr; encodeData(DJI::onboardSDK::SDKFilter*, DJI::onboardSDK::Header*, void(*)(tagAES256Context*, unsigned char*)) &rArr; aes256_init(tagAES256Context*, unsigned char*) &rArr; aes_expandEncKey(unsigned char*, unsigned char*)
</UL>
<BR>[Calls]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::send(unsigned char, bool, DJI::onboardSDK::CMD_SET, unsigned char, void*, unsigned, int, int, void(*)(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*), void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TerminalCommand::terminalCommandHandler(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Flight*)
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mobileCommandHandler(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Flight*)
</UL>

<P><STRONG><a name="[12a]"></a>DJI::onboardSDK::Flight::setArm(bool, void(*)(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*), void*)</STRONG> (Thumb, 74 bytes, Stack size 56 bytes, dji_flight.o(i._ZN3DJI10onboardSDK6Flight6setArmEbPFvPNS0_7CoreAPIEPNS0_6HeaderEPvES6_))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = DJI::onboardSDK::Flight::setArm(bool, void(*)(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*), void*) &rArr; DJI::onboardSDK::CoreAPI::send(unsigned char, bool, DJI::onboardSDK::CMD_SET, unsigned char, void*, unsigned, int, int, void(*)(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*), void*) &rArr; DJI::onboardSDK::CoreAPI::sendInterface(DJI::onboardSDK::Command*) &rArr; DJI::onboardSDK::CoreAPI::encrypt(unsigned char*, const unsigned char*, unsigned short, unsigned char, unsigned char, unsigned char, unsigned short) &rArr; encodeData(DJI::onboardSDK::SDKFilter*, DJI::onboardSDK::Header*, void(*)(tagAES256Context*, unsigned char*)) &rArr; aes256_init(tagAES256Context*, unsigned char*) &rArr; aes_expandEncKey(unsigned char*, unsigned char*)
</UL>
<BR>[Calls]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::send(unsigned char, bool, DJI::onboardSDK::CMD_SET, unsigned char, void*, unsigned, int, int, void(*)(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*), void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TerminalCommand::terminalCommandHandler(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Flight*)
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mobileCommandHandler(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Flight*)
</UL>

<P><STRONG><a name="[c7]"></a>DJI::onboardSDK::Flight::setFlight(DJI::onboardSDK::FlightData*)</STRONG> (Thumb, 58 bytes, Stack size 40 bytes, dji_flight.o(i._ZN3DJI10onboardSDK6Flight9setFlightEPNS0_10FlightDataE))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = DJI::onboardSDK::Flight::setFlight(DJI::onboardSDK::FlightData*) &rArr; DJI::onboardSDK::CoreAPI::send(unsigned char, bool, DJI::onboardSDK::CMD_SET, unsigned char, void*, unsigned, int, int, void(*)(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*), void*) &rArr; DJI::onboardSDK::CoreAPI::sendInterface(DJI::onboardSDK::Command*) &rArr; DJI::onboardSDK::CoreAPI::encrypt(unsigned char*, const unsigned char*, unsigned short, unsigned char, unsigned char, unsigned char, unsigned short) &rArr; encodeData(DJI::onboardSDK::SDKFilter*, DJI::onboardSDK::Header*, void(*)(tagAES256Context*, unsigned char*)) &rArr; aes256_init(tagAES256Context*, unsigned char*) &rArr; aes_expandEncKey(unsigned char*, unsigned char*)
</UL>
<BR>[Calls]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::send(unsigned char, bool, DJI::onboardSDK::CMD_SET, unsigned char, void*, unsigned, int, int, void(*)(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*), void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TerminalCommand::terminalCommandHandler(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Flight*)
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCU40_1_IRQHandler
</UL>

<P><STRONG><a name="[176]"></a>DJI::onboardSDK::Flight::Flight(DJI::onboardSDK::CoreAPI*)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, dji_flight.o(i._ZN3DJI10onboardSDK6FlightC1EPNS0_7CoreAPIE))
<BR><BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___8_main_cpp_driver
</UL>

<P><STRONG><a name="[194]"></a>DJI::onboardSDK::Flight::Flight__sub_object(DJI::onboardSDK::CoreAPI*)</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dji_flight.o(i._ZN3DJI10onboardSDK6FlightC1EPNS0_7CoreAPIE), UNUSED)

<P><STRONG><a name="[142]"></a>DJI::onboardSDK::CoreAPI::appHandler(DJI::onboardSDK::Header*)</STRONG> (Thumb, 710 bytes, Stack size 32 bytes, dji_link.o(i._ZN3DJI10onboardSDK7CoreAPI10appHandlerEPNS0_6HeaderE))
<BR><BR>[Stack]<UL><LI>Max Depth = 1288<LI>Call Chain = DJI::onboardSDK::CoreAPI::appHandler(DJI::onboardSDK::Header*) &rArr; DJI::onboardSDK::CoreAPI::recvReqData(DJI::onboardSDK::Header*) &rArr; DJI::onboardSDK::CoreAPI::broadcast(DJI::onboardSDK::Header*) &rArr; DJI::onboardSDK::CoreAPI::getFlightStatus() const &rArr; DJI::onboardSDK::CoreAPI::getBroadcastData() const &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::recvReqData(DJI::onboardSDK::Header*)
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::freeSession(DJI::onboardSDK::CMDSession*)
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::sendData(unsigned char*)
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::notifyNonBlockingCaller(DJI::onboardSDK::Header*)
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::setACKFrameStatus(unsigned)
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::notifyCaller(DJI::onboardSDK::Header*)
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::callApp(DJI::onboardSDK::SDKFilter*)
</UL>

<P><STRONG><a name="[126]"></a>DJI::onboardSDK::CoreAPI::setControl(bool, void(*)(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*), void*)</STRONG> (Thumb, 76 bytes, Stack size 56 bytes, dji_api.o(i._ZN3DJI10onboardSDK7CoreAPI10setControlEbPFvPS1_PNS0_6HeaderEPvES5_))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = DJI::onboardSDK::CoreAPI::setControl(bool, void(*)(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*), void*) &rArr; DJI::onboardSDK::CoreAPI::send(unsigned char, bool, DJI::onboardSDK::CMD_SET, unsigned char, void*, unsigned, int, int, void(*)(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*), void*) &rArr; DJI::onboardSDK::CoreAPI::sendInterface(DJI::onboardSDK::Command*) &rArr; DJI::onboardSDK::CoreAPI::encrypt(unsigned char*, const unsigned char*, unsigned short, unsigned char, unsigned char, unsigned char, unsigned short) &rArr; encodeData(DJI::onboardSDK::SDKFilter*, DJI::onboardSDK::Header*, void(*)(tagAES256Context*, unsigned char*)) &rArr; aes256_init(tagAES256Context*, unsigned char*) &rArr; aes_expandEncKey(unsigned char*, unsigned char*)
</UL>
<BR>[Calls]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::send(unsigned char, bool, DJI::onboardSDK::CMD_SET, unsigned char, void*, unsigned, int, int, void(*)(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*), void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TerminalCommand::terminalCommandHandler(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Flight*)
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mobileCommandHandler(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Flight*)
</UL>

<P><STRONG><a name="[149]"></a>DJI::onboardSDK::CoreAPI::verifyData(DJI::onboardSDK::SDKFilter*)</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, dji_codec.o(i._ZN3DJI10onboardSDK7CoreAPI10verifyDataEPNS0_9SDKFilterE))
<BR><BR>[Stack]<UL><LI>Max Depth = 1320<LI>Call Chain = DJI::onboardSDK::CoreAPI::verifyData(DJI::onboardSDK::SDKFilter*) &rArr; DJI::onboardSDK::CoreAPI::callApp(DJI::onboardSDK::SDKFilter*) &rArr; DJI::onboardSDK::CoreAPI::appHandler(DJI::onboardSDK::Header*) &rArr; DJI::onboardSDK::CoreAPI::recvReqData(DJI::onboardSDK::Header*) &rArr; DJI::onboardSDK::CoreAPI::broadcast(DJI::onboardSDK::Header*) &rArr; DJI::onboardSDK::CoreAPI::getFlightStatus() const &rArr; DJI::onboardSDK::CoreAPI::getBroadcastData() const &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::callApp(DJI::onboardSDK::SDKFilter*)
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdk_stream_update_reuse_part_lambda(DJI::onboardSDK::SDKFilter*)
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdk_stream_crc32_calc(const unsigned char*, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::checkStream(DJI::onboardSDK::SDKFilter*)
</UL>

<P><STRONG><a name="[14b]"></a>DJI::onboardSDK::CoreAPI::verifyHead(DJI::onboardSDK::SDKFilter*)</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, dji_codec.o(i._ZN3DJI10onboardSDK7CoreAPI10verifyHeadEPNS0_9SDKFilterE))
<BR><BR>[Stack]<UL><LI>Max Depth = 1320<LI>Call Chain = DJI::onboardSDK::CoreAPI::verifyHead(DJI::onboardSDK::SDKFilter*) &rArr; DJI::onboardSDK::CoreAPI::callApp(DJI::onboardSDK::SDKFilter*) &rArr; DJI::onboardSDK::CoreAPI::appHandler(DJI::onboardSDK::Header*) &rArr; DJI::onboardSDK::CoreAPI::recvReqData(DJI::onboardSDK::Header*) &rArr; DJI::onboardSDK::CoreAPI::broadcast(DJI::onboardSDK::Header*) &rArr; DJI::onboardSDK::CoreAPI::getFlightStatus() const &rArr; DJI::onboardSDK::CoreAPI::getBroadcastData() const &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::callApp(DJI::onboardSDK::SDKFilter*)
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdk_stream_shift_data_lambda(DJI::onboardSDK::SDKFilter*)
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdk_stream_crc16_calc(const unsigned char*, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::checkStream(DJI::onboardSDK::SDKFilter*)
</UL>

<P><STRONG><a name="[14c]"></a>DJI::onboardSDK::CoreAPI::allocMemory(unsigned short)</STRONG> (Thumb, 872 bytes, Stack size 80 bytes, dji_memory.o(i._ZN3DJI10onboardSDK7CoreAPI11allocMemoryEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = DJI::onboardSDK::CoreAPI::allocMemory(unsigned short) &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memmove
</UL>
<BR>[Called By]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::allocACK(unsigned short, unsigned short)
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::allocSession(unsigned short, unsigned short)
</UL>

<P><STRONG><a name="[14d]"></a>DJI::onboardSDK::CoreAPI::allocateACK(DJI::onboardSDK::Header*)</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, dji_link.o(i._ZN3DJI10onboardSDK7CoreAPI11allocateACKEPNS0_6HeaderE))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DJI::onboardSDK::CoreAPI::allocateACK(DJI::onboardSDK::Header*) &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::notifyNonBlockingCaller(DJI::onboardSDK::Header*)
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::notifyCaller(DJI::onboardSDK::Header*)
</UL>

<P><STRONG><a name="[cf]"></a>DJI::onboardSDK::CoreAPI::byteHandler(unsigned char)</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, dji_codec.o(i._ZN3DJI10onboardSDK7CoreAPI11byteHandlerEh))
<BR><BR>[Stack]<UL><LI>Max Depth = 1368<LI>Call Chain = DJI::onboardSDK::CoreAPI::byteHandler(unsigned char) &rArr; DJI::onboardSDK::CoreAPI::streamHandler(DJI::onboardSDK::SDKFilter*, unsigned char) &rArr; DJI::onboardSDK::CoreAPI::checkStream(DJI::onboardSDK::SDKFilter*) &rArr; DJI::onboardSDK::CoreAPI::verifyHead(DJI::onboardSDK::SDKFilter*) &rArr; DJI::onboardSDK::CoreAPI::callApp(DJI::onboardSDK::SDKFilter*) &rArr; DJI::onboardSDK::CoreAPI::appHandler(DJI::onboardSDK::Header*) &rArr; DJI::onboardSDK::CoreAPI::recvReqData(DJI::onboardSDK::Header*) &rArr; DJI::onboardSDK::CoreAPI::broadcast(DJI::onboardSDK::Header*) &rArr; DJI::onboardSDK::CoreAPI::getFlightStatus() const &rArr; DJI::onboardSDK::CoreAPI::getBroadcastData() const &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::streamHandler(DJI::onboardSDK::SDKFilter*, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USIC1_5_IRQHandler
</UL>

<P><STRONG><a name="[14f]"></a>DJI::onboardSDK::CoreAPI::checkStream(DJI::onboardSDK::SDKFilter*)</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, dji_codec.o(i._ZN3DJI10onboardSDK7CoreAPI11checkStreamEPNS0_9SDKFilterE))
<BR><BR>[Stack]<UL><LI>Max Depth = 1336<LI>Call Chain = DJI::onboardSDK::CoreAPI::checkStream(DJI::onboardSDK::SDKFilter*) &rArr; DJI::onboardSDK::CoreAPI::verifyHead(DJI::onboardSDK::SDKFilter*) &rArr; DJI::onboardSDK::CoreAPI::callApp(DJI::onboardSDK::SDKFilter*) &rArr; DJI::onboardSDK::CoreAPI::appHandler(DJI::onboardSDK::Header*) &rArr; DJI::onboardSDK::CoreAPI::recvReqData(DJI::onboardSDK::Header*) &rArr; DJI::onboardSDK::CoreAPI::broadcast(DJI::onboardSDK::Header*) &rArr; DJI::onboardSDK::CoreAPI::getFlightStatus() const &rArr; DJI::onboardSDK::CoreAPI::getBroadcastData() const &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::verifyHead(DJI::onboardSDK::SDKFilter*)
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::verifyData(DJI::onboardSDK::SDKFilter*)
</UL>
<BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::streamHandler(DJI::onboardSDK::SDKFilter*, unsigned char)
</UL>

<P><STRONG><a name="[143]"></a>DJI::onboardSDK::CoreAPI::freeSession(DJI::onboardSDK::CMDSession*)</STRONG> (Thumb, 30 bytes, Stack size 4 bytes, dji_memory.o(i._ZN3DJI10onboardSDK7CoreAPI11freeSessionEPNS0_10CMDSessionE))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = DJI::onboardSDK::CoreAPI::freeSession(DJI::onboardSDK::CMDSession*)
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;freeMemory(DJI::onboardSDK::MMU_Tab*)
</UL>
<BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::sendPoll()
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::appHandler(DJI::onboardSDK::Header*)
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::sendInterface(DJI::onboardSDK::Command*)
</UL>

<P><STRONG><a name="[147]"></a>DJI::onboardSDK::CoreAPI::recvReqData(DJI::onboardSDK::Header*)</STRONG> (Thumb, 970 bytes, Stack size 144 bytes, dji_app.o(i._ZN3DJI10onboardSDK7CoreAPI11recvReqDataEPNS0_6HeaderE))
<BR><BR>[Stack]<UL><LI>Max Depth = 1256<LI>Call Chain = DJI::onboardSDK::CoreAPI::recvReqData(DJI::onboardSDK::Header*) &rArr; DJI::onboardSDK::CoreAPI::broadcast(DJI::onboardSDK::Header*) &rArr; DJI::onboardSDK::CoreAPI::getFlightStatus() const &rArr; DJI::onboardSDK::CoreAPI::getBroadcastData() const &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::broadcast(DJI::onboardSDK::Header*)
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getCmdSet(DJI::onboardSDK::Header*)
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getCmdCode(DJI::onboardSDK::Header*)
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::ackInterface(DJI::onboardSDK::Ack*)
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::parseFromMobileCallback(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*)
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::appHandler(DJI::onboardSDK::Header*)
</UL>

<P><STRONG><a name="[155]"></a>DJI::onboardSDK::CoreAPI::ackInterface(DJI::onboardSDK::Ack*)</STRONG> (Thumb, 354 bytes, Stack size 40 bytes, dji_link.o(i._ZN3DJI10onboardSDK7CoreAPI12ackInterfaceEPNS0_3AckE))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = DJI::onboardSDK::CoreAPI::ackInterface(DJI::onboardSDK::Ack*) &rArr; DJI::onboardSDK::CoreAPI::encrypt(unsigned char*, const unsigned char*, unsigned short, unsigned char, unsigned char, unsigned char, unsigned short) &rArr; encodeData(DJI::onboardSDK::SDKFilter*, DJI::onboardSDK::Header*, void(*)(tagAES256Context*, unsigned char*)) &rArr; aes256_init(tagAES256Context*, unsigned char*) &rArr; aes_expandEncKey(unsigned char*, unsigned char*)
</UL>
<BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::encrypt(unsigned char*, const unsigned char*, unsigned short, unsigned char, unsigned char, unsigned char, unsigned short)
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::allocACK(unsigned short, unsigned short)
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::sendData(unsigned char*)
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculateLength(unsigned short, unsigned short)
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::recvReqData(DJI::onboardSDK::Header*)
</UL>

<P><STRONG><a name="[159]"></a>DJI::onboardSDK::CoreAPI::allocSession(unsigned short, unsigned short)</STRONG> (Thumb, 256 bytes, Stack size 40 bytes, dji_memory.o(i._ZN3DJI10onboardSDK7CoreAPI12allocSessionEtt))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = DJI::onboardSDK::CoreAPI::allocSession(unsigned short, unsigned short) &rArr; DJI::onboardSDK::CoreAPI::allocMemory(unsigned short) &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::allocMemory(unsigned short)
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::sendInterface(DJI::onboardSDK::Command*)
</UL>

<P><STRONG><a name="[145]"></a>DJI::onboardSDK::CoreAPI::notifyCaller(DJI::onboardSDK::Header*)</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, dji_link.o(i._ZN3DJI10onboardSDK7CoreAPI12notifyCallerEPNS0_6HeaderE))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = DJI::onboardSDK::CoreAPI::notifyCaller(DJI::onboardSDK::Header*) &rArr; DJI::onboardSDK::CoreAPI::allocateACK(DJI::onboardSDK::Header*) &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::allocateACK(DJI::onboardSDK::Header*)
</UL>
<BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::appHandler(DJI::onboardSDK::Header*)
</UL>

<P><STRONG><a name="[129]"></a>DJI::onboardSDK::CoreAPI::sendToMobile(unsigned char*, unsigned char, void(*)(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*), void*)</STRONG> (Thumb, 140 bytes, Stack size 56 bytes, dji_api.o(i._ZN3DJI10onboardSDK7CoreAPI12sendToMobileEPhhPFvPS1_PNS0_6HeaderEPvES6_))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = DJI::onboardSDK::CoreAPI::sendToMobile(unsigned char*, unsigned char, void(*)(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*), void*) &rArr; DJI::onboardSDK::CoreAPI::send(unsigned char, bool, DJI::onboardSDK::CMD_SET, unsigned char, void*, unsigned, int, int, void(*)(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*), void*) &rArr; DJI::onboardSDK::CoreAPI::sendInterface(DJI::onboardSDK::Command*) &rArr; DJI::onboardSDK::CoreAPI::encrypt(unsigned char*, const unsigned char*, unsigned short, unsigned char, unsigned char, unsigned char, unsigned short) &rArr; encodeData(DJI::onboardSDK::SDKFilter*, DJI::onboardSDK::Header*, void(*)(tagAES256Context*, unsigned char*)) &rArr; aes256_init(tagAES256Context*, unsigned char*) &rArr; aes_expandEncKey(unsigned char*, unsigned char*)
</UL>
<BR>[Calls]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::send(unsigned char, bool, DJI::onboardSDK::CMD_SET, unsigned char, void*, unsigned, int, int, void(*)(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*), void*)
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mobileCommandHandler(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Flight*)
</UL>

<P><STRONG><a name="[165]"></a>DJI::onboardSDK::CoreAPI::setupSession()</STRONG> (Thumb, 148 bytes, Stack size 0 bytes, dji_memory.o(i._ZN3DJI10onboardSDK7CoreAPI12setupSessionEv))
<BR><BR>[Called By]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::setup()
</UL>

<P><STRONG><a name="[15a]"></a>DJI::onboardSDK::CoreAPI::sendInterface(DJI::onboardSDK::Command*)</STRONG> (Thumb, 2426 bytes, Stack size 48 bytes, dji_link.o(i._ZN3DJI10onboardSDK7CoreAPI13sendInterfaceEPNS0_7CommandE))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = DJI::onboardSDK::CoreAPI::sendInterface(DJI::onboardSDK::Command*) &rArr; DJI::onboardSDK::CoreAPI::encrypt(unsigned char*, const unsigned char*, unsigned short, unsigned char, unsigned char, unsigned char, unsigned short) &rArr; encodeData(DJI::onboardSDK::SDKFilter*, DJI::onboardSDK::Header*, void(*)(tagAES256Context*, unsigned char*)) &rArr; aes256_init(tagAES256Context*, unsigned char*) &rArr; aes_expandEncKey(unsigned char*, unsigned char*)
</UL>
<BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::encrypt(unsigned char*, const unsigned char*, unsigned short, unsigned char, unsigned char, unsigned char, unsigned short)
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::allocSession(unsigned short, unsigned short)
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::freeSession(DJI::onboardSDK::CMDSession*)
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::sendData(unsigned char*)
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculateLength(unsigned short, unsigned short)
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::send(unsigned char, bool, DJI::onboardSDK::CMD_SET, unsigned char, void*, unsigned, int, int, void(*)(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*), void*)
</UL>

<P><STRONG><a name="[14e]"></a>DJI::onboardSDK::CoreAPI::streamHandler(DJI::onboardSDK::SDKFilter*, unsigned char)</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, dji_codec.o(i._ZN3DJI10onboardSDK7CoreAPI13streamHandlerEPNS0_9SDKFilterEh))
<BR><BR>[Stack]<UL><LI>Max Depth = 1352<LI>Call Chain = DJI::onboardSDK::CoreAPI::streamHandler(DJI::onboardSDK::SDKFilter*, unsigned char) &rArr; DJI::onboardSDK::CoreAPI::checkStream(DJI::onboardSDK::SDKFilter*) &rArr; DJI::onboardSDK::CoreAPI::verifyHead(DJI::onboardSDK::SDKFilter*) &rArr; DJI::onboardSDK::CoreAPI::callApp(DJI::onboardSDK::SDKFilter*) &rArr; DJI::onboardSDK::CoreAPI::appHandler(DJI::onboardSDK::Header*) &rArr; DJI::onboardSDK::CoreAPI::recvReqData(DJI::onboardSDK::Header*) &rArr; DJI::onboardSDK::CoreAPI::broadcast(DJI::onboardSDK::Header*) &rArr; DJI::onboardSDK::CoreAPI::getFlightStatus() const &rArr; DJI::onboardSDK::CoreAPI::getBroadcastData() const &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::storeData(DJI::onboardSDK::SDKFilter*, unsigned char)
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::checkStream(DJI::onboardSDK::SDKFilter*)
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::byteHandler(unsigned char)
</UL>

<P><STRONG><a name="[15c]"></a>DJI::onboardSDK::CoreAPI::decodeACKStatus(unsigned short)</STRONG> (Thumb, 452 bytes, Stack size 24 bytes, dji_codec.o(i._ZN3DJI10onboardSDK7CoreAPI15decodeACKStatusEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = DJI::onboardSDK::CoreAPI::decodeACKStatus(unsigned short) &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::setFrequencyCallback(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*)
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::sendToMobileCallback(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*)
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::setControlCallback(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*)
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::activateCallback(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*)
</UL>

<P><STRONG><a name="[13b]"></a>DJI::onboardSDK::CoreAPI::getDroneVersion(void(*)(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*), void*)</STRONG> (Thumb, 84 bytes, Stack size 56 bytes, dji_api.o(i._ZN3DJI10onboardSDK7CoreAPI15getDroneVersionEPFvPS1_PNS0_6HeaderEPvES5_))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = DJI::onboardSDK::CoreAPI::getDroneVersion(void(*)(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*), void*) &rArr; DJI::onboardSDK::CoreAPI::send(unsigned char, bool, DJI::onboardSDK::CMD_SET, unsigned char, void*, unsigned, int, int, void(*)(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*), void*) &rArr; DJI::onboardSDK::CoreAPI::sendInterface(DJI::onboardSDK::Command*) &rArr; DJI::onboardSDK::CoreAPI::encrypt(unsigned char*, const unsigned char*, unsigned short, unsigned char, unsigned char, unsigned char, unsigned short) &rArr; encodeData(DJI::onboardSDK::SDKFilter*, DJI::onboardSDK::Header*, void(*)(tagAES256Context*, unsigned char*)) &rArr; aes256_init(tagAES256Context*, unsigned char*) &rArr; aes_expandEncKey(unsigned char*, unsigned char*)
</UL>
<BR>[Calls]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::send(unsigned char, bool, DJI::onboardSDK::CMD_SET, unsigned char, void*, unsigned, int, int, void(*)(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*), void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TerminalCommand::terminalCommandHandler(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Flight*)
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[89]"></a>DJI::onboardSDK::CoreAPI::activateCallback(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*)</STRONG> (Thumb, 860 bytes, Stack size 40 bytes, dji_api.o(i._ZN3DJI10onboardSDK7CoreAPI16activateCallbackEPS1_PNS0_6HeaderEPv))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = DJI::onboardSDK::CoreAPI::activateCallback(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*) &rArr; DJI::onboardSDK::CoreAPI::setKey(const char*) &rArr; transformTwoByte(const char*, unsigned char*) &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_int
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::setKey(const char*)
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::setBroadcastActivation(unsigned)
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::decodeACKStatus(unsigned short)
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dji_api.o(i._ZN3DJI10onboardSDK7CoreAPI8activateEPNS0_12ActivateDataEPFvPS1_PNS0_6HeaderEPvES7_)
</UL>
<P><STRONG><a name="[15f]"></a>DJI::onboardSDK::CoreAPI::setBroadcastFreq(unsigned char*, void(*)(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*), void*)</STRONG> (Thumb, 132 bytes, Stack size 56 bytes, dji_api.o(i._ZN3DJI10onboardSDK7CoreAPI16setBroadcastFreqEPhPFvPS1_PNS0_6HeaderEPvES6_))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = DJI::onboardSDK::CoreAPI::setBroadcastFreq(unsigned char*, void(*)(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*), void*) &rArr; DJI::onboardSDK::CoreAPI::send(unsigned char, bool, DJI::onboardSDK::CMD_SET, unsigned char, void*, unsigned, int, int, void(*)(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*), void*) &rArr; DJI::onboardSDK::CoreAPI::sendInterface(DJI::onboardSDK::Command*) &rArr; DJI::onboardSDK::CoreAPI::encrypt(unsigned char*, const unsigned char*, unsigned short, unsigned char, unsigned char, unsigned char, unsigned short) &rArr; encodeData(DJI::onboardSDK::SDKFilter*, DJI::onboardSDK::Header*, void(*)(tagAES256Context*, unsigned char*)) &rArr; aes256_init(tagAES256Context*, unsigned char*) &rArr; aes_expandEncKey(unsigned char*, unsigned char*)
</UL>
<BR>[Calls]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::send(unsigned char, bool, DJI::onboardSDK::CMD_SET, unsigned char, void*, unsigned, int, int, void(*)(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*), void*)
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[146]"></a>DJI::onboardSDK::CoreAPI::setACKFrameStatus(unsigned)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dji_link.o(i._ZN3DJI10onboardSDK7CoreAPI17setACKFrameStatusEj))
<BR><BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::appHandler(DJI::onboardSDK::Header*)
</UL>

<P><STRONG><a name="[84]"></a>DJI::onboardSDK::CoreAPI::setControlCallback(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*)</STRONG> (Thumb, 846 bytes, Stack size 56 bytes, dji_api.o(i._ZN3DJI10onboardSDK7CoreAPI18setControlCallbackEPS1_PNS0_6HeaderEPv))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = DJI::onboardSDK::CoreAPI::setControlCallback(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*) &rArr; DJI::onboardSDK::CoreAPI::send(unsigned char, bool, DJI::onboardSDK::CMD_SET, unsigned char, void*, unsigned, int, int, void(*)(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*), void*) &rArr; DJI::onboardSDK::CoreAPI::sendInterface(DJI::onboardSDK::Command*) &rArr; DJI::onboardSDK::CoreAPI::encrypt(unsigned char*, const unsigned char*, unsigned short, unsigned char, unsigned char, unsigned char, unsigned short) &rArr; encodeData(DJI::onboardSDK::SDKFilter*, DJI::onboardSDK::Header*, void(*)(tagAES256Context*, unsigned char*)) &rArr; aes256_init(tagAES256Context*, unsigned char*) &rArr; aes_expandEncKey(unsigned char*, unsigned char*)
</UL>
<BR>[Calls]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::decodeACKStatus(unsigned short)
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::send(unsigned char, bool, DJI::onboardSDK::CMD_SET, unsigned char, void*, unsigned, int, int, void(*)(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*), void*)
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Address Reference Count : 2]<UL><LI> dji_api.o(i._ZN3DJI10onboardSDK7CoreAPI18setControlCallbackEPS1_PNS0_6HeaderEPv)
<LI> dji_api.o(i._ZN3DJI10onboardSDK7CoreAPI10setControlEbPFvPS1_PNS0_6HeaderEPvES5_)
</UL>
<P><STRONG><a name="[13d]"></a>DJI::onboardSDK::CoreAPI::decodeMissionStatus(unsigned char)</STRONG> (Thumb, 118 bytes, Stack size 32 bytes, dji_mission.o(i._ZN3DJI10onboardSDK7CoreAPI19decodeMissionStatusEh))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = DJI::onboardSDK::CoreAPI::decodeMissionStatus(unsigned char) &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::HotPoint::startCallback(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*)
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::missionCallback(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*)
</UL>

<P><STRONG><a name="[85]"></a>DJI::onboardSDK::CoreAPI::sendToMobileCallback(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*)</STRONG> (Thumb, 212 bytes, Stack size 40 bytes, dji_api.o(i._ZN3DJI10onboardSDK7CoreAPI20sendToMobileCallbackEPS1_PNS0_6HeaderEPv))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = DJI::onboardSDK::CoreAPI::sendToMobileCallback(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*) &rArr; DJI::onboardSDK::CoreAPI::decodeACKStatus(unsigned short) &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::decodeACKStatus(unsigned short)
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dji_api.o(i._ZN3DJI10onboardSDK7CoreAPI12sendToMobileEPhhPFvPS1_PNS0_6HeaderEPvES6_)
</UL>
<P><STRONG><a name="[17c]"></a>DJI::onboardSDK::CoreAPI::setBroadcastCallback(void(*)(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*), void*)</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, dji_app.o(i._ZN3DJI10onboardSDK7CoreAPI20setBroadcastCallbackEPFvPS1_PNS0_6HeaderEPvES5_))
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[87]"></a>DJI::onboardSDK::CoreAPI::setFrequencyCallback(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*)</STRONG> (Thumb, 280 bytes, Stack size 32 bytes, dji_api.o(i._ZN3DJI10onboardSDK7CoreAPI20setFrequencyCallbackEPS1_PNS0_6HeaderEPv))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = DJI::onboardSDK::CoreAPI::setFrequencyCallback(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*) &rArr; DJI::onboardSDK::CoreAPI::decodeACKStatus(unsigned short) &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::decodeACKStatus(unsigned short)
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dji_api.o(i._ZN3DJI10onboardSDK7CoreAPI16setBroadcastFreqEPhPFvPS1_PNS0_6HeaderEPvES6_)
</UL>
<P><STRONG><a name="[161]"></a>DJI::onboardSDK::CoreAPI::parseDroneVersionInfo(unsigned char*)</STRONG> (Thumb, 2750 bytes, Stack size 152 bytes, dji_api.o(i._ZN3DJI10onboardSDK7CoreAPI21parseDroneVersionInfoEPh))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = DJI::onboardSDK::CoreAPI::parseDroneVersionInfo(unsigned char*) &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::getDroneVersionCallback(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*)
</UL>

<P><STRONG><a name="[15d]"></a>DJI::onboardSDK::CoreAPI::setBroadcastActivation(unsigned)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dji_codec.o(i._ZN3DJI10onboardSDK7CoreAPI22setBroadcastActivationEj))
<BR><BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::activateCallback(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*)
</UL>

<P><STRONG><a name="[86]"></a>DJI::onboardSDK::CoreAPI::getDroneVersionCallback(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*)</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, dji_api.o(i._ZN3DJI10onboardSDK7CoreAPI23getDroneVersionCallbackEPS1_PNS0_6HeaderEPv))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = DJI::onboardSDK::CoreAPI::getDroneVersionCallback(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*) &rArr; DJI::onboardSDK::CoreAPI::parseDroneVersionInfo(unsigned char*) &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::parseDroneVersionInfo(unsigned char*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dji_api.o(i._ZN3DJI10onboardSDK7CoreAPI15getDroneVersionEPFvPS1_PNS0_6HeaderEPvES5_)
</UL>
<P><STRONG><a name="[144]"></a>DJI::onboardSDK::CoreAPI::notifyNonBlockingCaller(DJI::onboardSDK::Header*)</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, dji_link.o(i._ZN3DJI10onboardSDK7CoreAPI23notifyNonBlockingCallerEPNS0_6HeaderE))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = DJI::onboardSDK::CoreAPI::notifyNonBlockingCaller(DJI::onboardSDK::Header*) &rArr; DJI::onboardSDK::CoreAPI::allocateACK(DJI::onboardSDK::Header*) &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::allocateACK(DJI::onboardSDK::Header*)
</UL>
<BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::appHandler(DJI::onboardSDK::Header*)
</UL>

<P><STRONG><a name="[154]"></a>DJI::onboardSDK::CoreAPI::parseFromMobileCallback(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*)</STRONG> (Thumb, 614 bytes, Stack size 24 bytes, dji_api.o(i._ZN3DJI10onboardSDK7CoreAPI23parseFromMobileCallbackEPS1_PNS0_6HeaderEPv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DJI::onboardSDK::CoreAPI::parseFromMobileCallback(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::recvReqData(DJI::onboardSDK::Header*)
</UL>

<P><STRONG><a name="[168]"></a>DJI::onboardSDK::CoreAPI::setBroadcastFrameStatus(bool)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dji_app.o(i._ZN3DJI10onboardSDK7CoreAPI23setBroadcastFrameStatusEb))
<BR><BR>[Called By]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::broadcast(DJI::onboardSDK::Header*)
</UL>

<P><STRONG><a name="[162]"></a>DJI::onboardSDK::CoreAPI::init(DJI::onboardSDK::HardDriver*, DJI::onboardSDK::CallBackHandler, bool)</STRONG> (Thumb, 244 bytes, Stack size 32 bytes, dji_api.o(i._ZN3DJI10onboardSDK7CoreAPI4initEPNS0_10HardDriverENS0_15CallBackHandlerEb))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = DJI::onboardSDK::CoreAPI::init(DJI::onboardSDK::HardDriver*, DJI::onboardSDK::CallBackHandler, bool) &rArr; DJI::onboardSDK::CoreAPI::setup()
</UL>
<BR>[Calls]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::setup()
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::CoreAPI(DJI::onboardSDK::HardDriver*, bool, void(*)(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*), void*)
</UL>

<P><STRONG><a name="[141]"></a>DJI::onboardSDK::CoreAPI::send(unsigned char, bool, DJI::onboardSDK::CMD_SET, unsigned char, void*, unsigned, int, int, void(*)(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*), void*)</STRONG> (Thumb, 128 bytes, Stack size 56 bytes, dji_api.o(i._ZN3DJI10onboardSDK7CoreAPI4sendEhbNS0_7CMD_SETEhPvjiiPFvPS1_PNS0_6HeaderES3_ES3_))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = DJI::onboardSDK::CoreAPI::send(unsigned char, bool, DJI::onboardSDK::CMD_SET, unsigned char, void*, unsigned, int, int, void(*)(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*), void*) &rArr; DJI::onboardSDK::CoreAPI::sendInterface(DJI::onboardSDK::Command*) &rArr; DJI::onboardSDK::CoreAPI::encrypt(unsigned char*, const unsigned char*, unsigned short, unsigned char, unsigned char, unsigned char, unsigned short) &rArr; encodeData(DJI::onboardSDK::SDKFilter*, DJI::onboardSDK::Header*, void(*)(tagAES256Context*, unsigned char*)) &rArr; aes256_init(tagAES256Context*, unsigned char*) &rArr; aes_expandEncKey(unsigned char*, unsigned char*)
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::sendInterface(DJI::onboardSDK::Command*)
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::HotPoint::start(void(*)(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*), void*)
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::HotPoint::stop(void(*)(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*), void*)
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::activate(DJI::onboardSDK::ActivateData*, void(*)(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*), void*)
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::setBroadcastFreq(unsigned char*, void(*)(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*), void*)
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::getDroneVersion(void(*)(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*), void*)
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::VirtualRC::sendData(DJI::onboardSDK::VirtualRCData)
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::VirtualRC::setControl(bool, DJI::onboardSDK::VirtualRC::CutOff)
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::Flight::setFlight(DJI::onboardSDK::FlightData*)
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::sendToMobile(unsigned char*, unsigned char, void(*)(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*), void*)
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::setControl(bool, void(*)(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*), void*)
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::Flight::setArm(bool, void(*)(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*), void*)
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::Flight::task(DJI::onboardSDK::Flight::TASK, void(*)(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*), void*)
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::Flight::setMovementControl(unsigned char, float, float, float, float)
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::setControlCallback(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*)
</UL>

<P><STRONG><a name="[163]"></a>DJI::onboardSDK::CoreAPI::setup()</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, dji_link.o(i._ZN3DJI10onboardSDK7CoreAPI5setupEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DJI::onboardSDK::CoreAPI::setup()
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::setupMMU()
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::setupSession()
</UL>
<BR>[Called By]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::init(DJI::onboardSDK::HardDriver*, DJI::onboardSDK::CallBackHandler, bool)
</UL>

<P><STRONG><a name="[15e]"></a>DJI::onboardSDK::CoreAPI::setKey(const char*)</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, dji_link.o(i._ZN3DJI10onboardSDK7CoreAPI6setKeyEPKc))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = DJI::onboardSDK::CoreAPI::setKey(const char*) &rArr; transformTwoByte(const char*, unsigned char*) &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_int
</UL>
<BR>[Calls]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transformTwoByte(const char*, unsigned char*)
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::activateCallback(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*)
</UL>

<P><STRONG><a name="[14a]"></a>DJI::onboardSDK::CoreAPI::callApp(DJI::onboardSDK::SDKFilter*)</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, dji_codec.o(i._ZN3DJI10onboardSDK7CoreAPI7callAppEPNS0_9SDKFilterE))
<BR><BR>[Stack]<UL><LI>Max Depth = 1304<LI>Call Chain = DJI::onboardSDK::CoreAPI::callApp(DJI::onboardSDK::SDKFilter*) &rArr; DJI::onboardSDK::CoreAPI::appHandler(DJI::onboardSDK::Header*) &rArr; DJI::onboardSDK::CoreAPI::recvReqData(DJI::onboardSDK::Header*) &rArr; DJI::onboardSDK::CoreAPI::broadcast(DJI::onboardSDK::Header*) &rArr; DJI::onboardSDK::CoreAPI::getFlightStatus() const &rArr; DJI::onboardSDK::CoreAPI::getBroadcastData() const &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::appHandler(DJI::onboardSDK::Header*)
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdk_stream_prepare_lambda(DJI::onboardSDK::SDKFilter*)
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encodeData(DJI::onboardSDK::SDKFilter*, DJI::onboardSDK::Header*, void(*)(tagAES256Context*, unsigned char*))
</UL>
<BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::verifyHead(DJI::onboardSDK::SDKFilter*)
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::verifyData(DJI::onboardSDK::SDKFilter*)
</UL>

<P><STRONG><a name="[158]"></a>DJI::onboardSDK::CoreAPI::encrypt(unsigned char*, const unsigned char*, unsigned short, unsigned char, unsigned char, unsigned char, unsigned short)</STRONG> (Thumb, 338 bytes, Stack size 40 bytes, dji_codec.o(i._ZN3DJI10onboardSDK7CoreAPI7encryptEPhPKhthhht))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = DJI::onboardSDK::CoreAPI::encrypt(unsigned char*, const unsigned char*, unsigned short, unsigned char, unsigned char, unsigned char, unsigned short) &rArr; encodeData(DJI::onboardSDK::SDKFilter*, DJI::onboardSDK::Header*, void(*)(tagAES256Context*, unsigned char*)) &rArr; aes256_init(tagAES256Context*, unsigned char*) &rArr; aes_expandEncKey(unsigned char*, unsigned char*)
</UL>
<BR>[Calls]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculateCRC(void*)
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encodeData(DJI::onboardSDK::SDKFilter*, DJI::onboardSDK::Header*, void(*)(tagAES256Context*, unsigned char*))
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::sendInterface(DJI::onboardSDK::Command*)
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::ackInterface(DJI::onboardSDK::Ack*)
</UL>

<P><STRONG><a name="[166]"></a>DJI::onboardSDK::CoreAPI::freeACK(DJI::onboardSDK::ACKSession*)</STRONG> (Thumb, 14 bytes, Stack size 4 bytes, dji_memory.o(i._ZN3DJI10onboardSDK7CoreAPI7freeACKEPNS0_10ACKSessionE))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = DJI::onboardSDK::CoreAPI::freeACK(DJI::onboardSDK::ACKSession*)
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;freeMemory(DJI::onboardSDK::MMU_Tab*)
</UL>
<BR>[Called By]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::allocACK(unsigned short, unsigned short)
</UL>

<P><STRONG><a name="[100]"></a>DJI::onboardSDK::CoreAPI::activate(DJI::onboardSDK::ActivateData*, void(*)(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*), void*)</STRONG> (Thumb, 188 bytes, Stack size 56 bytes, dji_api.o(i._ZN3DJI10onboardSDK7CoreAPI8activateEPNS0_12ActivateDataEPFvPS1_PNS0_6HeaderEPvES7_))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = DJI::onboardSDK::CoreAPI::activate(DJI::onboardSDK::ActivateData*, void(*)(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*), void*) &rArr; DJI::onboardSDK::CoreAPI::send(unsigned char, bool, DJI::onboardSDK::CMD_SET, unsigned char, void*, unsigned, int, int, void(*)(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*), void*) &rArr; DJI::onboardSDK::CoreAPI::sendInterface(DJI::onboardSDK::Command*) &rArr; DJI::onboardSDK::CoreAPI::encrypt(unsigned char*, const unsigned char*, unsigned short, unsigned char, unsigned char, unsigned char, unsigned short) &rArr; encodeData(DJI::onboardSDK::SDKFilter*, DJI::onboardSDK::Header*, void(*)(tagAES256Context*, unsigned char*)) &rArr; aes256_init(tagAES256Context*, unsigned char*) &rArr; aes_expandEncKey(unsigned char*, unsigned char*)
</UL>
<BR>[Calls]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::send(unsigned char, bool, DJI::onboardSDK::CMD_SET, unsigned char, void*, unsigned, int, int, void(*)(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*), void*)
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;User_Activate()
</UL>

<P><STRONG><a name="[157]"></a>DJI::onboardSDK::CoreAPI::allocACK(unsigned short, unsigned short)</STRONG> (Thumb, 236 bytes, Stack size 32 bytes, dji_memory.o(i._ZN3DJI10onboardSDK7CoreAPI8allocACKEtt))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = DJI::onboardSDK::CoreAPI::allocACK(unsigned short, unsigned short) &rArr; DJI::onboardSDK::CoreAPI::allocMemory(unsigned short) &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::freeACK(DJI::onboardSDK::ACKSession*)
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::allocMemory(unsigned short)
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::ackInterface(DJI::onboardSDK::Ack*)
</UL>

<P><STRONG><a name="[148]"></a>DJI::onboardSDK::CoreAPI::sendData(unsigned char*)</STRONG> (Thumb, 178 bytes, Stack size 32 bytes, dji_link.o(i._ZN3DJI10onboardSDK7CoreAPI8sendDataEPh))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = DJI::onboardSDK::CoreAPI::sendData(unsigned char*) &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::sendPoll()
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::appHandler(DJI::onboardSDK::Header*)
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::sendInterface(DJI::onboardSDK::Command*)
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::ackInterface(DJI::onboardSDK::Ack*)
</UL>

<P><STRONG><a name="[167]"></a>DJI::onboardSDK::CoreAPI::sendPoll()</STRONG> (Thumb, 302 bytes, Stack size 32 bytes, dji_link.o(i._ZN3DJI10onboardSDK7CoreAPI8sendPollEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = DJI::onboardSDK::CoreAPI::sendPoll() &rArr; DJI::onboardSDK::CoreAPI::sendData(unsigned char*) &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::freeSession(DJI::onboardSDK::CMDSession*)
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::sendData(unsigned char*)
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[164]"></a>DJI::onboardSDK::CoreAPI::setupMMU()</STRONG> (Thumb, 154 bytes, Stack size 0 bytes, dji_memory.o(i._ZN3DJI10onboardSDK7CoreAPI8setupMMUEv))
<BR><BR>[Called By]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::setup()
</UL>

<P><STRONG><a name="[153]"></a>DJI::onboardSDK::CoreAPI::broadcast(DJI::onboardSDK::Header*)</STRONG> (Thumb, 728 bytes, Stack size 472 bytes, dji_app.o(i._ZN3DJI10onboardSDK7CoreAPI9broadcastEPNS0_6HeaderE))
<BR><BR>[Stack]<UL><LI>Max Depth = 1112<LI>Call Chain = DJI::onboardSDK::CoreAPI::broadcast(DJI::onboardSDK::Header*) &rArr; DJI::onboardSDK::CoreAPI::getFlightStatus() const &rArr; DJI::onboardSDK::CoreAPI::getBroadcastData() const &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::getBroadcastData() const
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::getFlightStatus() const
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::setBroadcastFrameStatus(bool)
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;passData(unsigned short, unsigned short&, void*, unsigned char*, unsigned, unsigned&)
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::getHwVersion() const
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::recvReqData(DJI::onboardSDK::Header*)
</UL>

<P><STRONG><a name="[15b]"></a>DJI::onboardSDK::CoreAPI::storeData(DJI::onboardSDK::SDKFilter*, unsigned char)</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, dji_codec.o(i._ZN3DJI10onboardSDK7CoreAPI9storeDataEPNS0_9SDKFilterEh))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = DJI::onboardSDK::CoreAPI::storeData(DJI::onboardSDK::SDKFilter*, unsigned char) &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::streamHandler(DJI::onboardSDK::SDKFilter*, unsigned char)
</UL>

<P><STRONG><a name="[16a]"></a>DJI::onboardSDK::CoreAPI::CoreAPI(DJI::onboardSDK::HardDriver*, bool, void(*)(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*), void*)</STRONG> (Thumb, 42 bytes, Stack size 40 bytes, dji_api.o(i._ZN3DJI10onboardSDK7CoreAPIC1EPNS0_10HardDriverEbPFvPS1_PNS0_6HeaderEPvES7_))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = DJI::onboardSDK::CoreAPI::CoreAPI(DJI::onboardSDK::HardDriver*, bool, void(*)(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*), void*) &rArr; DJI::onboardSDK::CoreAPI::init(DJI::onboardSDK::HardDriver*, DJI::onboardSDK::CallBackHandler, bool) &rArr; DJI::onboardSDK::CoreAPI::setup()
</UL>
<BR>[Calls]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::init(DJI::onboardSDK::HardDriver*, DJI::onboardSDK::CallBackHandler, bool)
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___8_main_cpp_driver
</UL>

<P><STRONG><a name="[195]"></a>DJI::onboardSDK::CoreAPI::CoreAPI__sub_object(DJI::onboardSDK::HardDriver*, bool, void(*)(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*), void*)</STRONG> (Thumb, 0 bytes, Stack size 40 bytes, dji_api.o(i._ZN3DJI10onboardSDK7CoreAPIC1EPNS0_10HardDriverEbPFvPS1_PNS0_6HeaderEPvES7_), UNUSED)

<P><STRONG><a name="[e6]"></a>DJI::onboardSDK::HotPoint::setYawRate(float)</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, dji_hotpoint.o(i._ZN3DJI10onboardSDK8HotPoint10setYawRateEf))
<BR><BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tryHotpoint(double, float, float)
</UL>

<P><STRONG><a name="[e5]"></a>DJI::onboardSDK::HotPoint::setHotPoint(DJI::onboardSDK::GPSPositionData)</STRONG> (Thumb, 46 bytes, Stack size 32 bytes, dji_hotpoint.o(i._ZN3DJI10onboardSDK8HotPoint11setHotPointENS0_15GPSPositionDataE))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = DJI::onboardSDK::HotPoint::setHotPoint(DJI::onboardSDK::GPSPositionData)
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tryHotpoint(double, float, float)
</UL>

<P><STRONG><a name="[8b]"></a>DJI::onboardSDK::HotPoint::startCallback(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*)</STRONG> (Thumb, 318 bytes, Stack size 64 bytes, dji_hotpoint.o(i._ZN3DJI10onboardSDK8HotPoint13startCallbackEPNS0_7CoreAPIEPNS0_6HeaderEPv))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = DJI::onboardSDK::HotPoint::startCallback(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*) &rArr; DJI::onboardSDK::CoreAPI::decodeMissionStatus(unsigned char) &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::getDriver() const
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::decodeMissionStatus(unsigned char)
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dji_hotpoint.o(i._ZN3DJI10onboardSDK8HotPoint5startEPFvPNS0_7CoreAPIEPNS0_6HeaderEPvES6_)
</UL>
<P><STRONG><a name="[fd]"></a>DJI::onboardSDK::HotPoint::stop(void(*)(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*), void*)</STRONG> (Thumb, 76 bytes, Stack size 48 bytes, dji_hotpoint.o(i._ZN3DJI10onboardSDK8HotPoint4stopEPFvPNS0_7CoreAPIEPNS0_6HeaderEPvES6_))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = DJI::onboardSDK::HotPoint::stop(void(*)(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*), void*) &rArr; DJI::onboardSDK::CoreAPI::send(unsigned char, bool, DJI::onboardSDK::CMD_SET, unsigned char, void*, unsigned, int, int, void(*)(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*), void*) &rArr; DJI::onboardSDK::CoreAPI::sendInterface(DJI::onboardSDK::Command*) &rArr; DJI::onboardSDK::CoreAPI::encrypt(unsigned char*, const unsigned char*, unsigned short, unsigned char, unsigned char, unsigned char, unsigned short) &rArr; encodeData(DJI::onboardSDK::SDKFilter*, DJI::onboardSDK::Header*, void(*)(tagAES256Context*, unsigned char*)) &rArr; aes256_init(tagAES256Context*, unsigned char*) &rArr; aes_expandEncKey(unsigned char*, unsigned char*)
</UL>
<BR>[Calls]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::send(unsigned char, bool, DJI::onboardSDK::CMD_SET, unsigned char, void*, unsigned, int, int, void(*)(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*), void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stopHotpoint()
</UL>

<P><STRONG><a name="[e9]"></a>DJI::onboardSDK::HotPoint::start(void(*)(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*), void*)</STRONG> (Thumb, 72 bytes, Stack size 48 bytes, dji_hotpoint.o(i._ZN3DJI10onboardSDK8HotPoint5startEPFvPNS0_7CoreAPIEPNS0_6HeaderEPvES6_))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = DJI::onboardSDK::HotPoint::start(void(*)(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*), void*) &rArr; DJI::onboardSDK::CoreAPI::send(unsigned char, bool, DJI::onboardSDK::CMD_SET, unsigned char, void*, unsigned, int, int, void(*)(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*), void*) &rArr; DJI::onboardSDK::CoreAPI::sendInterface(DJI::onboardSDK::Command*) &rArr; DJI::onboardSDK::CoreAPI::encrypt(unsigned char*, const unsigned char*, unsigned short, unsigned char, unsigned char, unsigned char, unsigned short) &rArr; encodeData(DJI::onboardSDK::SDKFilter*, DJI::onboardSDK::Header*, void(*)(tagAES256Context*, unsigned char*)) &rArr; aes256_init(tagAES256Context*, unsigned char*) &rArr; aes_expandEncKey(unsigned char*, unsigned char*)
</UL>
<BR>[Calls]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::send(unsigned char, bool, DJI::onboardSDK::CMD_SET, unsigned char, void*, unsigned, int, int, void(*)(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*), void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tryHotpoint(double, float, float)
</UL>

<P><STRONG><a name="[16b]"></a>DJI::onboardSDK::HotPoint::initData()</STRONG> (Thumb, 190 bytes, Stack size 448 bytes, dji_hotpoint.o(i._ZN3DJI10onboardSDK8HotPoint8initDataEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 672<LI>Call Chain = DJI::onboardSDK::HotPoint::initData() &rArr; DJI::onboardSDK::CoreAPI::getBroadcastData() const &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::getBroadcastData() const
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::HotPoint::HotPoint(DJI::onboardSDK::CoreAPI*)
</UL>

<P><STRONG><a name="[e8]"></a>DJI::onboardSDK::HotPoint::setRadius(double)</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, dji_hotpoint.o(i._ZN3DJI10onboardSDK8HotPoint9setRadiusEd))
<BR><BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tryHotpoint(double, float, float)
</UL>

<P><STRONG><a name="[16c]"></a>DJI::onboardSDK::HotPoint::HotPoint(DJI::onboardSDK::CoreAPI*)</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, dji_hotpoint.o(i._ZN3DJI10onboardSDK8HotPointC1EPNS0_7CoreAPIE))
<BR><BR>[Stack]<UL><LI>Max Depth = 688<LI>Call Chain = DJI::onboardSDK::HotPoint::HotPoint(DJI::onboardSDK::CoreAPI*) &rArr; DJI::onboardSDK::HotPoint::initData() &rArr; DJI::onboardSDK::CoreAPI::getBroadcastData() const &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::HotPoint::initData()
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___12_HotPoint_cpp_hotpoint
</UL>

<P><STRONG><a name="[196]"></a>DJI::onboardSDK::HotPoint::HotPoint__sub_object(DJI::onboardSDK::CoreAPI*)</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, dji_hotpoint.o(i._ZN3DJI10onboardSDK8HotPointC1EPNS0_7CoreAPIE), UNUSED)

<P><STRONG><a name="[f8]"></a>DJI::onboardSDK::VirtualRC::setControl(bool, DJI::onboardSDK::VirtualRC::CutOff)</STRONG> (Thumb, 82 bytes, Stack size 48 bytes, dji_virtualrc.o(i._ZN3DJI10onboardSDK9VirtualRC10setControlEbNS1_6CutOffE))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = DJI::onboardSDK::VirtualRC::setControl(bool, DJI::onboardSDK::VirtualRC::CutOff) &rArr; DJI::onboardSDK::CoreAPI::send(unsigned char, bool, DJI::onboardSDK::CMD_SET, unsigned char, void*, unsigned, int, int, void(*)(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*), void*) &rArr; DJI::onboardSDK::CoreAPI::sendInterface(DJI::onboardSDK::Command*) &rArr; DJI::onboardSDK::CoreAPI::encrypt(unsigned char*, const unsigned char*, unsigned short, unsigned char, unsigned char, unsigned char, unsigned short) &rArr; encodeData(DJI::onboardSDK::SDKFilter*, DJI::onboardSDK::Header*, void(*)(tagAES256Context*, unsigned char*)) &rArr; aes256_init(tagAES256Context*, unsigned char*) &rArr; aes_expandEncKey(unsigned char*, unsigned char*)
</UL>
<BR>[Calls]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::send(unsigned char, bool, DJI::onboardSDK::CMD_SET, unsigned char, void*, unsigned, int, int, void(*)(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*), void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VRC_TakeControl()
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VRCResetData()
</UL>

<P><STRONG><a name="[c6]"></a>DJI::onboardSDK::VirtualRC::sendData(DJI::onboardSDK::VirtualRCData)</STRONG> (Thumb, 72 bytes, Stack size 56 bytes, dji_virtualrc.o(i._ZN3DJI10onboardSDK9VirtualRC8sendDataENS0_13VirtualRCDataE))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = DJI::onboardSDK::VirtualRC::sendData(DJI::onboardSDK::VirtualRCData) &rArr; DJI::onboardSDK::CoreAPI::send(unsigned char, bool, DJI::onboardSDK::CMD_SET, unsigned char, void*, unsigned, int, int, void(*)(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*), void*) &rArr; DJI::onboardSDK::CoreAPI::sendInterface(DJI::onboardSDK::Command*) &rArr; DJI::onboardSDK::CoreAPI::encrypt(unsigned char*, const unsigned char*, unsigned short, unsigned char, unsigned char, unsigned char, unsigned short) &rArr; encodeData(DJI::onboardSDK::SDKFilter*, DJI::onboardSDK::Header*, void(*)(tagAES256Context*, unsigned char*)) &rArr; aes256_init(tagAES256Context*, unsigned char*) &rArr; aes_expandEncKey(unsigned char*, unsigned char*)
</UL>
<BR>[Calls]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::send(unsigned char, bool, DJI::onboardSDK::CMD_SET, unsigned char, void*, unsigned, int, int, void(*)(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*), void*)
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCU40_0_IRQHandler
</UL>

<P><STRONG><a name="[16e]"></a>DJI::onboardSDK::VirtualRC::resetData()</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, dji_virtualrc.o(i._ZN3DJI10onboardSDK9VirtualRC9resetDataEv))
<BR><BR>[Called By]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::VirtualRC::VirtualRC(DJI::onboardSDK::CoreAPI*)
</UL>

<P><STRONG><a name="[16d]"></a>DJI::onboardSDK::VirtualRC::VirtualRC(DJI::onboardSDK::CoreAPI*)</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, dji_virtualrc.o(i._ZN3DJI10onboardSDK9VirtualRCC1EPNS0_7CoreAPIE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DJI::onboardSDK::VirtualRC::VirtualRC(DJI::onboardSDK::CoreAPI*)
</UL>
<BR>[Calls]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::VirtualRC::resetData()
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___8_main_cpp_driver
</UL>

<P><STRONG><a name="[197]"></a>DJI::onboardSDK::VirtualRC::VirtualRC__sub_object(DJI::onboardSDK::CoreAPI*)</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, dji_virtualrc.o(i._ZN3DJI10onboardSDK9VirtualRCC1EPNS0_7CoreAPIE), UNUSED)

<P><STRONG><a name="[93]"></a>XMC_4700::freeMemory()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, driver.o(i._ZN8XMC_470010freeMemoryEv))
<BR>[Address Reference Count : 1]<UL><LI> driver.o(.constdata__ZTV8XMC_4700)
</UL>
<P><STRONG><a name="[92]"></a>XMC_4700::lockMemory()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, driver.o(i._ZN8XMC_470010lockMemoryEv))
<BR>[Address Reference Count : 1]<UL><LI> driver.o(.constdata__ZTV8XMC_4700)
</UL>
<P><STRONG><a name="[90]"></a>XMC_4700::getTimeStamp()</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, driver.o(i._ZN8XMC_470012getTimeStampEv))
<BR>[Address Reference Count : 1]<UL><LI> driver.o(.constdata__ZTV8XMC_4700)
</UL>
<P><STRONG><a name="[91]"></a>XMC_4700::send(const unsigned char*, unsigned)</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, driver.o(i._ZN8XMC_47004sendEPKhj))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = XMC_4700::send(const unsigned char*, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_UART_CH_Transmit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> driver.o(.constdata__ZTV8XMC_4700)
</UL>
<P><STRONG><a name="[98]"></a>XMC_4700::notify()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, driver.o(i._ZN8XMC_47006notifyEv))
<BR>[Address Reference Count : 1]<UL><LI> driver.o(.constdata__ZTV8XMC_4700)
</UL>
<P><STRONG><a name="[97]"></a>XMC_4700::freeACK()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, driver.o(i._ZN8XMC_47007freeACKEv))
<BR>[Address Reference Count : 1]<UL><LI> driver.o(.constdata__ZTV8XMC_4700)
</UL>
<P><STRONG><a name="[95]"></a>XMC_4700::freeMSG()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, driver.o(i._ZN8XMC_47007freeMSGEv))
<BR>[Address Reference Count : 1]<UL><LI> driver.o(.constdata__ZTV8XMC_4700)
</UL>
<P><STRONG><a name="[96]"></a>XMC_4700::lockACK()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, driver.o(i._ZN8XMC_47007lockACKEv))
<BR>[Address Reference Count : 1]<UL><LI> driver.o(.constdata__ZTV8XMC_4700)
</UL>
<P><STRONG><a name="[94]"></a>XMC_4700::lockMSG()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, driver.o(i._ZN8XMC_47007lockMSGEv))
<BR>[Address Reference Count : 1]<UL><LI> driver.o(.constdata__ZTV8XMC_4700)
</UL>
<P><STRONG><a name="[140]"></a>DJI::onboardSDK::CoreAPI::getFwVersion() const</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, dji_api.o(i._ZNK3DJI10onboardSDK7CoreAPI12getFwVersionEv))
<BR><BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::Flight::setMovementControl(unsigned char, float, float, float, float)
</UL>

<P><STRONG><a name="[169]"></a>DJI::onboardSDK::CoreAPI::getHwVersion() const</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, dji_api.o(i._ZNK3DJI10onboardSDK7CoreAPI12getHwVersionEv))
<BR><BR>[Called By]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::broadcast(DJI::onboardSDK::Header*)
</UL>

<P><STRONG><a name="[128]"></a>DJI::onboardSDK::CoreAPI::getSimpleACK() const</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, dji_api.o(i._ZNK3DJI10onboardSDK7CoreAPI12getSimpleACKEv))
<BR><BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mobileCommandHandler(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Flight*)
</UL>

<P><STRONG><a name="[107]"></a>DJI::onboardSDK::CoreAPI::getFlightStatus() const</STRONG> (Thumb, 32 bytes, Stack size 416 bytes, dji_api.o(i._ZNK3DJI10onboardSDK7CoreAPI15getFlightStatusEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 640<LI>Call Chain = DJI::onboardSDK::CoreAPI::getFlightStatus() const &rArr; DJI::onboardSDK::CoreAPI::getBroadcastData() const &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::getBroadcastData() const
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;myRecvCallback(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*)
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::broadcast(DJI::onboardSDK::Header*)
</UL>

<P><STRONG><a name="[e3]"></a>DJI::onboardSDK::CoreAPI::getBroadcastData() const</STRONG> (Thumb, 62 bytes, Stack size 216 bytes, dji_app.o(i._ZNK3DJI10onboardSDK7CoreAPI16getBroadcastDataEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = DJI::onboardSDK::CoreAPI::getBroadcastData() const &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tryHotpoint(double, float, float)
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TerminalCommand::terminalCommandHandler(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Flight*)
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;myRecvCallback(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*)
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::getFlightStatus() const
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::Flight::setMovementControl(unsigned char, float, float, float, float)
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::broadcast(DJI::onboardSDK::Header*)
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::HotPoint::initData()
</UL>

<P><STRONG><a name="[13f]"></a>DJI::onboardSDK::CoreAPI::getDriver() const</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, dji_api.o(i._ZNK3DJI10onboardSDK7CoreAPI9getDriverEv))
<BR><BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::Flight::setMovementControl(unsigned char, float, float, float, float)
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::Flight::taskCallback(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*)
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::Flight::armCallback(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*)
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::HotPoint::startCallback(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*)
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::missionCallback(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*)
</UL>

<P><STRONG><a name="[170]"></a>operator new(unsigned)</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, new.o(i._Znwj))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = operator new(unsigned) &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_new_handler_addr
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___8_main_cpp_driver
</UL>

<P><STRONG><a name="[172]"></a>__0printf</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[198]"></a>__1printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[108]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::HardDriver::displayLog(const char*)
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TerminalCommand::terminalCommandHandler(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Flight*)
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;myRecvCallback(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*)
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startLocalNavExample()
</UL>

<P><STRONG><a name="[199]"></a>__c89printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[19a]"></a>printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[174]"></a>__0sprintf</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[19b]"></a>__1sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[13e]"></a>__2sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::activate(DJI::onboardSDK::ActivateData*, void(*)(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*), void*)
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::sendToMobile(unsigned char*, unsigned char, void(*)(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*), void*)
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::Flight::setMovementControl(unsigned char, float, float, float, float)
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::Flight::taskCallback(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*)
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::Flight::armCallback(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*)
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::appHandler(DJI::onboardSDK::Header*)
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::storeData(DJI::onboardSDK::SDKFilter*, unsigned char)
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::encrypt(unsigned char*, const unsigned char*, unsigned short, unsigned char, unsigned char, unsigned char, unsigned short)
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::recvReqData(DJI::onboardSDK::Header*)
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::decodeACKStatus(unsigned short)
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::sendInterface(DJI::onboardSDK::Command*)
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::ackInterface(DJI::onboardSDK::Ack*)
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::parseDroneVersionInfo(unsigned char*)
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::setFrequencyCallback(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*)
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::sendToMobileCallback(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*)
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::setControlCallback(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*)
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::activateCallback(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*)
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::allocACK(unsigned short, unsigned short)
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::allocSession(unsigned short, unsigned short)
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::sendData(unsigned char*)
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::decodeMissionStatus(unsigned char)
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::HotPoint::startCallback(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*)
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::missionCallback(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*)
</UL>

<P><STRONG><a name="[19c]"></a>__c89sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[19d]"></a>sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[9f]"></a>__cxa_pure_virtual</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, pure_virt.o(i.__cxa_pure_virtual))
<BR><BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGPVFN
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dji_harddriver.o(.constdata__ZTVN3DJI10onboardSDK10HardDriverE)
</UL>
<P><STRONG><a name="[19e]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[19f]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[1a0]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[10f]"></a>fifo_init</STRONG> (Thumb, 34 bytes, Stack size 12 bytes, fifo.o(i.fifo_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = fifo_init
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSoftwareFIFO()
</UL>

<P><STRONG><a name="[10a]"></a>fifo_read_ch</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, fifo.o(i.fifo_read_ch))
<BR><BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serial_read_ch()
</UL>

<P><STRONG><a name="[115]"></a>fifo_used</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, fifo.o(i.fifo_used))
<BR><BR>[Called By]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serial_available()
</UL>

<P><STRONG><a name="[ce]"></a>fifo_write_ch</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, fifo.o(i.fifo_write_ch))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = fifo_write_ch
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USIC0_5_IRQHandler
</UL>

<P><STRONG><a name="[8d]"></a>fputc</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, cppforxmc4700.o(i.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = fputc
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_UART_CH_Transmit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0printf)
</UL>
<P><STRONG><a name="[79]"></a>main</STRONG> (Thumb, 216 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 1280<LI>Call Chain = main &rArr; TerminalCommand::terminalCommandHandler(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Flight*) &rArr; tryHotpoint(double, float, float) &rArr; DJI::onboardSDK::HotPoint::start(void(*)(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*), void*) &rArr; DJI::onboardSDK::CoreAPI::send(unsigned char, bool, DJI::onboardSDK::CMD_SET, unsigned char, void*, unsigned, int, int, void(*)(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*), void*) &rArr; DJI::onboardSDK::CoreAPI::sendInterface(DJI::onboardSDK::Command*) &rArr; DJI::onboardSDK::CoreAPI::encrypt(unsigned char*, const unsigned char*, unsigned short, unsigned char, unsigned char, unsigned char, unsigned short) &rArr; encodeData(DJI::onboardSDK::SDKFilter*, DJI::onboardSDK::Header*, void(*)(tagAES256Context*, unsigned char*)) &rArr; aes256_init(tagAES256Context*, unsigned char*) &rArr; aes_expandEncKey(unsigned char*, unsigned char*)
</UL>
<BR>[Calls]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::sendPoll()
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::setBroadcastCallback(void(*)(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*), void*)
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::setBroadcastFreq(unsigned char*, void(*)(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*), void*)
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::getDroneVersion(void(*)(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*), void*)
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TerminalCommand::terminalCommandHandler(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Flight*)
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_nms(unsigned short)
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSPinit()
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mobileCommandHandler(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Flight*)
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSoftwareFIFO()
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;User_Activate()
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[c1]"></a>malloc</STRONG> (Thumb, 92 bytes, Stack size 20 bytes, malloc.o(i.malloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_exceptions_buffer_init
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_get_globals
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[a0]"></a>__sti___8_main_cpp_driver</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, main.o(i.__sti___8_main_cpp_driver))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = __sti___8_main_cpp_driver &rArr; DJI::onboardSDK::CoreAPI::CoreAPI(DJI::onboardSDK::HardDriver*, bool, void(*)(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*), void*) &rArr; DJI::onboardSDK::CoreAPI::init(DJI::onboardSDK::HardDriver*, DJI::onboardSDK::CallBackHandler, bool) &rArr; DJI::onboardSDK::CoreAPI::setup()
</UL>
<BR>[Calls]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::VirtualRC::VirtualRC(DJI::onboardSDK::CoreAPI*)
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::CoreAPI::CoreAPI(DJI::onboardSDK::HardDriver*, bool, void(*)(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Header*, void*), void*)
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::Flight::Flight(DJI::onboardSDK::CoreAPI*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.init_array)
</UL>
<P><STRONG><a name="[a1]"></a>__sti___12_HotPoint_cpp_hotpoint</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, hotpoint.o(i.__sti___12_HotPoint_cpp_hotpoint))
<BR><BR>[Stack]<UL><LI>Max Depth = 696<LI>Call Chain = __sti___12_HotPoint_cpp_hotpoint &rArr; DJI::onboardSDK::HotPoint::HotPoint(DJI::onboardSDK::CoreAPI*) &rArr; DJI::onboardSDK::HotPoint::initData() &rArr; DJI::onboardSDK::CoreAPI::getBroadcastData() const &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::onboardSDK::HotPoint::HotPoint(DJI::onboardSDK::CoreAPI*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hotpoint.o(.init_array)
</UL>
<P><STRONG><a name="[10c]"></a>gps_convert_ned(DJI::onboardSDK::PositionData, DJI::onboardSDK::PositionData)</STRONG> (Thumb, 188 bytes, Stack size 48 bytes, localnavigation.o(i._Z15gps_convert_nedN3DJI10onboardSDK12PositionDataES1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = gps_convert_ned(DJI::onboardSDK::PositionData, DJI::onboardSDK::PositionData) &rArr; gps_convert_ned_rad(float&, float&, float, float, float, float)
</UL>
<BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_convert_ned_rad(float&, float&, float, float, float, float)
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateCurveFollowing()
</UL>

<P><STRONG><a name="[10d]"></a>gps_convert_ned_rad(float&, float&, float, float, float, float)</STRONG> (Thumb, 84 bytes, Stack size 40 bytes, localnavigation.o(i._Z19gps_convert_ned_radRfS_ffff))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = gps_convert_ned_rad(float&, float&, float, float, float, float)
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_cos_f32
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_convert_ned(DJI::onboardSDK::PositionData, DJI::onboardSDK::PositionData)
</UL>

<P><STRONG><a name="[11f]"></a>mavlink_parse_char(unsigned char, unsigned char, __mavlink_message*, __mavlink_status*)</STRONG> (Thumb, 120 bytes, Stack size 40 bytes, receive.o(i._Z18mavlink_parse_charhhP17__mavlink_messageP16__mavlink_status))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = mavlink_parse_char(unsigned char, unsigned char, __mavlink_message*, __mavlink_status*) &rArr; mavlink_frame_char_buffer(__mavlink_message*, __mavlink_status*, unsigned char, __mavlink_message*, __mavlink_status*) &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mavlink_get_channel_status(unsigned char)
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mavlink_get_channel_buffer(unsigned char)
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mavlink_frame_char_buffer(__mavlink_message*, __mavlink_status*, unsigned char, __mavlink_message*, __mavlink_status*)
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mavlink_start_checksum(__mavlink_message*)
</UL>
<BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TerminalCommand::terminalCommandHandler(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Flight*)
</UL>

<P><STRONG><a name="[123]"></a>mavlink_start_checksum(__mavlink_message*)</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, receive.o(i._Z22mavlink_start_checksumP17__mavlink_message))
<BR><BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mavlink_frame_char_buffer(__mavlink_message*, __mavlink_status*, unsigned char, __mavlink_message*, __mavlink_status*)
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mavlink_parse_char(unsigned char, unsigned char, __mavlink_message*, __mavlink_status*)
</UL>

<P><STRONG><a name="[132]"></a>mavlink_update_checksum(__mavlink_message*, unsigned char)</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, receive.o(i._Z23mavlink_update_checksumP17__mavlink_messageh))
<BR><BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mavlink_frame_char_buffer(__mavlink_message*, __mavlink_status*, unsigned char, __mavlink_message*, __mavlink_status*)
</UL>

<P><STRONG><a name="[122]"></a>mavlink_frame_char_buffer(__mavlink_message*, __mavlink_status*, unsigned char, __mavlink_message*, __mavlink_status*)</STRONG> (Thumb, 412 bytes, Stack size 32 bytes, receive.o(i._Z25mavlink_frame_char_bufferP17__mavlink_messageP16__mavlink_statushS0_S2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = mavlink_frame_char_buffer(__mavlink_message*, __mavlink_status*, unsigned char, __mavlink_message*, __mavlink_status*) &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mavlink_update_checksum(__mavlink_message*, unsigned char)
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mavlink_start_checksum(__mavlink_message*)
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mavlink_parse_char(unsigned char, unsigned char, __mavlink_message*, __mavlink_status*)
</UL>

<P><STRONG><a name="[121]"></a>mavlink_get_channel_buffer(unsigned char)</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, receive.o(i._Z26mavlink_get_channel_bufferh))
<BR><BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mavlink_parse_char(unsigned char, unsigned char, __mavlink_message*, __mavlink_status*)
</UL>

<P><STRONG><a name="[120]"></a>mavlink_get_channel_status(unsigned char)</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, receive.o(i._Z26mavlink_get_channel_statush))
<BR><BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mavlink_parse_char(unsigned char, unsigned char, __mavlink_message*, __mavlink_status*)
</UL>

<P><STRONG><a name="[13c]"></a>hex2Float(unsigned char, unsigned char)</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, receive.o(i._Z9hex2Floathh))
<BR><BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TerminalCommand::terminalCommandHandler(DJI::onboardSDK::CoreAPI*, DJI::onboardSDK::Flight*)
</UL>

<P><STRONG><a name="[a2]"></a>__sti___11_Receive_cpp_88bc3a46</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, receive.o(i.__sti___11_Receive_cpp_88bc3a46))
<BR>[Address Reference Count : 1]<UL><LI> receive.o(.init_array)
</UL>
<P><STRONG><a name="[113]"></a>NVIC_EnableIRQ(IRQn_Type)</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, bspusart.o(i._Z14NVIC_EnableIRQ9IRQn_Type))
<BR><BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTxNVIC_Config()
</UL>

<P><STRONG><a name="[112]"></a>NVIC_SetPriority(IRQn_Type, unsigned)</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, bspusart.o(i._Z16NVIC_SetPriority9IRQn_Typej))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_SetPriority(IRQn_Type, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTxNVIC_Config()
</UL>

<P><STRONG><a name="[102]"></a>XMC_UART_CH_Start(XMC_USIC_CH*)</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, bspusart.o(i._Z17XMC_UART_CH_StartP11XMC_USIC_CH))
<BR><BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PC_UART_Config()
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;N3_UART_Config()
</UL>

<P><STRONG><a name="[110]"></a>XMC_USIC_CH_EnableEvent(XMC_USIC_CH*, unsigned)</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, bspusart.o(i._Z23XMC_USIC_CH_EnableEventP11XMC_USIC_CHj))
<BR><BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTxNVIC_Config()
</UL>

<P><STRONG><a name="[101]"></a>XMC_UART_CH_SetInputSource(XMC_USIC_CH*, XMC_UART_CH_INPUT, unsigned char)</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, bspusart.o(i._Z26XMC_UART_CH_SetInputSourceP11XMC_USIC_CH17XMC_UART_CH_INPUTh))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = XMC_UART_CH_SetInputSource(XMC_USIC_CH*, XMC_UART_CH_INPUT, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PC_UART_Config()
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;N3_UART_Config()
</UL>

<P><STRONG><a name="[f4]"></a>NVIC_EnableIRQ(IRQn_Type)</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, timer.o(i._Z14NVIC_EnableIRQ9IRQn_Type))
<BR><BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer2Config()
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer1Config()
</UL>

<P><STRONG><a name="[f3]"></a>NVIC_SetPriority(IRQn_Type, unsigned)</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, timer.o(i._Z16NVIC_SetPriority9IRQn_Typej))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_SetPriority(IRQn_Type, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystickConfig()
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer2Config()
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer1Config()
</UL>

<P><STRONG><a name="[f5]"></a>XMC_CCU4_EnableClock(CCU4_GLOBAL_TypeDef*, unsigned char)</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, timer.o(i._Z20XMC_CCU4_EnableClockP19CCU4_GLOBAL_TypeDefh))
<BR><BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer2Config()
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer1Config()
</UL>

<P><STRONG><a name="[eb]"></a>XMC_CCU4_StartPrescaler(CCU4_GLOBAL_TypeDef*)</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, timer.o(i._Z23XMC_CCU4_StartPrescalerP19CCU4_GLOBAL_TypeDef))
<BR><BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer2Config()
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer1Config()
</UL>

<P><STRONG><a name="[f1]"></a>XMC_CCU4_SLICE_EnableEvent(CCU4_CC4_TypeDef*, XMC_CCU4_SLICE_IRQ_ID)</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, timer.o(i._Z26XMC_CCU4_SLICE_EnableEventP16CCU4_CC4_TypeDef21XMC_CCU4_SLICE_IRQ_ID))
<BR><BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer2Config()
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer1Config()
</UL>

<P><STRONG><a name="[f0]"></a>XMC_CCU4_EnableShadowTransfer(CCU4_GLOBAL_TypeDef*, unsigned)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, timer.o(i._Z29XMC_CCU4_EnableShadowTransferP19CCU4_GLOBAL_TypeDefj))
<BR><BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer2Config()
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer1Config()
</UL>

<P><STRONG><a name="[ef]"></a>XMC_CCU4_SLICE_SetTimerPeriodMatch(CCU4_CC4_TypeDef*, unsigned short)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, timer.o(i._Z34XMC_CCU4_SLICE_SetTimerPeriodMatchP16CCU4_CC4_TypeDeft))
<BR><BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer2Config()
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer1Config()
</UL>

<P><STRONG><a name="[ee]"></a>XMC_CCU4_SLICE_SetTimerCompareMatch(CCU4_CC4_TypeDef*, unsigned short)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, timer.o(i._Z35XMC_CCU4_SLICE_SetTimerCompareMatchP16CCU4_CC4_TypeDeft))
<BR><BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer2Config()
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer1Config()
</UL>

<P><STRONG><a name="[c9]"></a>delay</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, system_xmc4700.o(i.delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = delay
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockSetup
</UL>

<P><STRONG><a name="[177]"></a>_fp_digits</STRONG> (Thumb, 366 bytes, Stack size 64 bytes, printfa.o(i._fp_digits), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[173]"></a>_printf_core</STRONG> (Thumb, 1744 bytes, Stack size 136 bytes, printfa.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf
</UL>

<P><STRONG><a name="[17a]"></a>_printf_post_padding</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, printfa.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[179]"></a>_printf_pre_padding</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, printfa.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[8e]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, printfa.o(i._sputc))
<BR><BR>[Called By]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0sprintf)
</UL>
<P><STRONG><a name="[7e]"></a>_scanf_char_input</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, scanf_char.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> scanf_char.o(.text)
</UL>
<P><STRONG><a name="[80]"></a>[local to arm_exceptions_c]::__default_terminate_handler()</STRONG> (Thumb, 6 bytes, Stack size 8 bytes, arm_exceptions_globs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = [local to arm_exceptions_c]::__default_terminate_handler()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_exceptions_globs.o(.text)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
